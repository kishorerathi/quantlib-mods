
/*
 Copyright (C) 2004 Ferdinando Ametrano
 Copyright (C) 2000-2003 StatPro Italia srl

 This file is part of QuantLib, a free-software/open-source library
 for financial quantitative analysts and developers - http://quantlib.org/

 QuantLib is free software: you can redistribute it and/or modify it
 under the terms of the QuantLib license.  You should have received a
 copy of the license along with this program; if not, please email
 <quantlib-dev@lists.sf.net>. The license is also available online at
 <http://quantlib.org/reference/license.html>.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the license for more details.
*/

/*! \page overview Project overview

    The %QuantLib project is at this time in <em>beta</em> status.

    The following list is a (possibly outdated) overview of the
    existing code base.

    The <a href="http://lists.sourceforge.net/lists/listinfo/quantlib-users">
    QuantLib-users</a> and <a
    href="http://lists.sourceforge.net/lists/listinfo/quantlib-dev">
    QuantLib-dev</a> mailing lists are the preferred forum for proposals,
    suggestions and contributions regarding the future development of the
    library.




    <strong>Date, calendars, and day count conventions</strong>
    - Date class.
    - Weekday, month, frequency, time unit enumerations.
    - Period class (eg. 1y, 30d, 2m, etc.)
    - IMM calculation.
    - More than 30 business calendars.
    - NullCalendar (no holidays) for theoretical calculations.
    - Joint calendars made up as holiday union or intersection of base
      calendars.
    - Rolling conventions: Preceding, ModifiedPreceding, Following,
      ModifiedFollowing, MonthEndReference.
    - Schedule class for date stream generation.
    - Day count conventions: Actual360, Actual365Fixed, ActualActual (Bond,
      ISDA, AFB), 30/360 (US, European, Italian), 1/1.

    To do:
    - Differentiate more calendars depending on country or exchange, instead of
      city.
    - enable business day calculation in addition to calendar days calculation
      in DayCounter::daycount(). See DayTypeEnum in FpML.




    <strong>Math</strong>
    - Linear, log-linear, and cubic spline interpolation.
    - Primitive, first and second derivative functions of cubic and linear
      interpolators.
    - Cubic spline end conditions: first derivative value, second derivative
      value, not-a-knot.
    - Monotone cubic spline with Hyman non-restrictive filter.
    - Bicubic spline and bilinear interpolations.
    - N-dimensional cubic spline interpolation.
    - Normal and cumulative normal distributions.
    - Inverse cumulative normal distribution: Moro and Acklam approximations.
    - Bivariate cumulative normal distribution.
	- Binomial coefficients, binomial distribution,
	  cumulative binomial distribution, and	Peizer-Pratt inversion (method 2.)
	- Chi square and non-central chi square distributions.
	- Beta functions.
	- Poisson and cumulative Poisson distributions.
	- Incomplete gamma functions.
	- Gamma distribution.
	- Factorials.
    - Integration algorithms: segment, trapezoid, mid-point trapezoid,
      Simpson, Gauss-Kronrod.
    - Error function.
    - General 1-D statistics: mean, variance,
      standard deviation, skewness, kurtosis, error estimation, min, max.
    - Multi-dimensional (sequence) statistics: all the 1-D methods plus
      covariance, correlation, L2-discrepancy calculation, etc.
    - Risk measures for Gaussian and empirical distributions: semi-variance,
      regret, percentile, top percentile, value-at-risk, upside potential,
      shorfall, average shorfall, expected shortfall.
    - Array and matrix classes for algebra.
    - Singular value decomposition.
    - Eigenvalues, eigenvectors for symmetric matrices.
	- Cholesky decomposition.
	- Schur decomposition.
	- Spectral rank-reduced square root, spectral pseudo-square root.

    To do:
    - Periodic and Lagrange end conditions for cubic spline.
    - Implement convexity-preserving filter for cubic spline.
    - Log-linear interpolator primitive, first and second derivative functions.
    - Revise end conditions for bicubic and N-dimensional spline.
    - Trivariate and multi-variate distribution, see Genz, A. (1992)
      `Numerical Computation of the Multivariate Normal Probabilities',
      J. Comput. Graph. Stat. 1, pp. 141-150.
    - Hypersphere decomposition, Higham algorithm for pseudo-square root.
    - interface with GALib (genetic algorithm)
    - Add COOOL algorithms
    - Histogram class


    <strong>1-dimensional solvers</strong>
    - Bisection, false position, Newton, bounded Newton, Ridder, secant,
      Brent.

    To do:
    - Clean up the interface so that it is clear whether the accuracy is
      specified for x or f(x).




    <strong>Optimization</strong>
	- Conjugate gradient, simplex, steepest descent, line search,
      Armijo line search, least squares.
    - Constrained (positive, boundary, etc.) and unconstrained optimization




    <strong>Random-number generation</strong>
    - Uniform pseudo-random sequences: Knuth, L'Ecuyer, Mersenne twister.
    - Uniform quasi-random (low-discrepancy) sequences: Halton, Faure,
      Sobol up to dimension 21,200 (8,129,334 if you really want) with
      unit, Jäckel, Bradley-Fox, and Lemieux-Cieslak-Luttmer
      initialization numbers.
    - Randomized quasi-random sequences (in progress)
    - Randomized (shifted) low-discrepancy sequences.
    - Primitive polynomials modulo 2 up to dimension 18 (available up
      to dimension 27)
    - Gaussian random numbers from uniform random numbers using different
      algorithms: central limit theorem, Box-Muller, inverse cumulative (Moro
      and Acklam algorithms)




    <strong>Patterns</strong>
	- Bridge, composite, lazy object, observer/observable, singleton,
      strategy, visitor.




    <strong>Finite differences</strong>
    - Mixed theta, implicit, explicit, and Crank-Nicolson 1-dimensional
      schemes.
    - Differential operators: \f$ D_{0} \f$, \f$ D_{+} \f$,
      \f$ D_{-} \f$, \f$ D_{+}D_{-} \f$.
    - Shout, Bermudan and American exercises.

    To do:
    - Richardson extrapolation
    - Introduce variable theta schemes.
    - Introduce multi time-level schemes.
    - Enable different solvers (SOR, etc.)
    - Extend to time-dependant parameters.
    - Extend to local volatility.
    - Two-dimension schemes.
    - Improve boundary conditions.
    - Use DiscretisedAsset instead of array?
    - Use TimeGrid
    - Use assetGrid
    - Handle barrier specification
    - Handle variable asset step size
    - Check (and improve) vega, rho, dividendRho greeks, solving
      their own equations




    <strong>Lattices</strong>
    - Binomial trees: Cox-Ross-Rubinstein, Jarrow-Rudd, additive
      equiprobabilities, Trigeorgis, Tian, Leisen-Reimer.
    - Trinomial (interest-rate) tree.
    - Discretized asset.
    - Richardson extrapolation

    To do:
    - Merge finite differences with the lattice framework. Use same rollback
      scheme.
    - Trinomial trees
    - Implied trinomial trees
    - Calculate binomial tree greeks




    <strong>Monte Carlo</strong>
    - One-factor and multi-factor path classes.
    - Path-generator classes: incremental and Brownian-bridge one-factor
      path generation, incremental multi-factor path generation.
    - General-purpose Monte Carlo model based on traits for path
      samples.
    - Antithetic variance-reduction technique.
    - Control variate technique.

    To do:
    - Greeks calculation.
    - Allow easier selection between Incremental/BrownianBridge path
      generation.
    - Review Monte Carlo engine for american options.
    - Review multi-factor Monte Carlo simulation.
    - Predictor-corrector scheme.
    - Add Milstein scheme.
    - Add Martingale control variate.
    - Batch samples as N=n_batches*batch_size, and exploit it for randomized
      low discrepancy sequences (RQMC)




    <strong>Pricing engines</strong>
    - Analytic Black formula (plus greeks) for different payoffs.
    - Analytic formula for American-style digital options with payoff
      at expiry.
    - Analytic formula for American-style digital options with payoff at hit.
    - Monte Carlo simulation base engine.
    - Lattice short rate model base engine.
    - Engines for options described by "vanilla" set of parameters: analytic
      digital American, analytic discrete-dividend European,
      analytic European, Barone-Adesi and Whaley approximation for
      American, Ju approximation for American, binomial
      (Cox-Ross-Rubinstein, Jarrow-Rudd, additive equiprobabilities,
      Trigeorgis, Tian, Leisen-Reimer), Bjerksund and Stensland
      approximation for American, integral European, Merton 76
      jump-diffusion, Monte Carlo digital, Monte Carlo European,
      Bates and Heston models, finite-difference European, Bermudan
      and American.
    - Engines for options described by "barrier" set of parameters: analytic
      down/up in/out, Monte Carlo down/up in/out
    - Engines for Asian options:
      analytic discrete geometric average-price, analytic continuous
      geometric average-price, Monte Carlo discrete arithmetic
      average-price, Monte Carlo discrete geometric average-price.
    - Engines for options described by "cliquet" set of parameters:
      analytic, analytic performance.
    - Forward and forward-performance compound engines.
    - Quanto compound engine.
    - Quanto-forward and Quanto-forward-performance compound engines.
    - Basket engine: analytic Stulz engine for max/min on two assets, Monte
      Carlo engine (in progress).
    - Black model base class for vanilla interest rate derivatives
    - Cap/floor pricing engines: analytic Black model, analytic affine models,
      tree based engine.
    - Swaption pricing engines: analytic Black model, analytic affine models
      (Jamshidian), tree based engine.

    To do:
    - Add the trigger level Touch/NoTouch specification for American-style
      digitals.
    - More vanilla engines: Roll-Geske-Whaley American Call, Geske-Johnson
      American Put, finite differences, Edgeworth expansion binomial tree,
      etc.
    - Merge NesQuant SJD engine (http://www.nielses.dk/quantlib/nesquant/)
    - Continuous geometric average-strike.
    - Ensure all path-dependent options allow for evaluation with collected
      past observations.
    - Define dividendRho for discrete dividends.




    <strong>Pricers</strong>
    - Cliquet option
    - Analytic discrete geometric average-price option (European exercise).
    - Analytic discrete geometric average-strike option (European exercise).
    - Monte Carlo cliquet option.
    - Monte Carlo discrete arithmetic average-price option.
    - Monte Carlo discrete arithmetic average-strike option.
    - Monte Carlo Everest option.
    - Monte Carlo Himalaya option.
    - Monte Carlo max basket option.
    - Monte Carlo pagoda option.
    - Monte Carlo forward performance option.




    <strong>Financial Instruments</strong>
    - Instrument base class: npv(), isExpired(), etc.
    - Interest-rate swap: simple, normal.
    - Swaption.
    - Cap/floor.
    - Fixed-rate coupon bond.
    - Stock.
    - One-asset option base class.
    - Asian option.
    - Barrier option.
    - Cliquet option.
    - Forward vanilla option.
    - Quanto vanilla option.
    - Quanto-forward vanilla option.
    - Vanilla option.
    - Multi-asset option base class.
    - Basket option.

    To do:
    - Forward (stock) and FRA (forward-rate agreement).
    - More bonds.




    <strong>Yield term structures</strong>
    - Term structure common interface.
    - Term structure classes based on discount, zero, or forward
      underlying description.
    - Term structure based on linear interpolation of zero yields.
    - Term structure based on log-linear interpolation of discounts.
    - Term structure based on constant flat forward.
    - Term structure based on piecewise-constant flat forwards with
      libor-futures-swap bootstrapping algorithm.
    - Spreaded term structures.
    - Forward-date implied term structure.

    To do:
    - Future convexity adjustment
    - End of year effect



    <strong>Volatility</strong>
    - Interface for cap/floor Black volatility term structures (unstable).
    - Interface for swaption Black volatility term structures (unstable).
    - Interface for equity Black volatility term structures based on
      volatility or variance underlying description: constant,
      time-dependant curve, time-strike surface, forward date implied term
      structure.
    - Interface for equity local volatility term structures: constant,
      time-dependant curve, time-asset level surface (Gatheral's formula).

      To do:
    - Fix implementation of Gatheral's formula for local volatility.




    <strong>Short rate models</strong>
    - Single factor models: Hull-White, Black-Karasinski, Vasichek (untested),
      CIR (untested), Extended CIR (untested).
    - Two factor models: G2 (untested).




    <strong>Credit derivatives</strong>

    To do:
    - everything.



    <strong>Test suite</strong>

    Implemented by means of the Boost unit-test framework.
    More than 210 automated tests.
    \htmlonly
    An automatically-generated list is available <a href="test.html">here</a>.
    \endhtmlonly
    \latexonly
    An automatically-generated list is available in chapter~\ref{test}.
    \endlatexonly

	To do:
    - Add covariance/correlation test for SequenceStatistics.
	- Increase coverage.




    <strong>Miscellanea</strong>
    - Index classes for handling of fixed-income libor indexes (fixings,
      forecasting, etc.)
    - Cash-flow class.
    - Currency class and enumeration.
    - Money class with automatic exchange-rate capabilities.
    - Output data formatters: long integers, Ordinal numerals,
      power of two, exponential, fixed digit, sequences, dates, etc.
    - Input data parsers.
    - Error classes and error handling.
    - Exercise classes: European, Bermudan, American
    - Payoff classes: plain, gap, asset-or-nothing, cash-or-nothing
    - Grid classes for handling of equally and unequally spaced grids.
    - History class for handling of historical data.
    - Quote class for mutable data.
    - Null types.
    - User-configurable flag to disable usage of deprecated classes.

    To do:
    - Implement currency as per OMG definition




    <strong>Documentation</strong>
    - Documentation automatically generated with Doxygen (html, PDF, ps,
      WinHelp, man pages)

    To do:
    - Add a "Getting started" page to the site


*/

