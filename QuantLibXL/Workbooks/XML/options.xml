<Category name='options'>
  <description>functions to construct and use Option objects</description>
  <displayName>Options</displayName>
  <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <includes>
    <include>qlo/options.hpp</include>
    <include>qlo/pricingengines.hpp</include>
    <include>qlo/payoffs.hpp</include>
  </includes>
  <copyright>
    Copyright (C) 2005, 2006 Eric Ehlers
  </copyright>
  <Functions>

    <Constructor name='qlBarrierOption'>
      <libraryFunction>BarrierOption</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='barrierType' enumeration='QuantLib::Barrier::Type'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>barrier type</description>
          </Parameter>
          <Parameter name='barrier'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>barrier</description>
          </Parameter>
          <Parameter name='rebate'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>rebate</description>
          </Parameter>
          <Parameter name='blackScholes' libraryClass='GeneralizedBlackScholesProcess'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>GeneralizedBlackScholesProcess object ID</description>
          </Parameter>
          <Parameter name='payoff' libraryClass='StrikedTypePayoff'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>striked type payoff object ID</description>
          </Parameter>
          <Parameter name='exercise' libraryClass='Exercise'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Exercise ID</description>
          </Parameter>
          <Parameter name='pricingEngine' libraryClass='PricingEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>pricing engine object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlCaAsianOption'>
      <libraryFunction>ContinuousAveragingAsianOption</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='average' enumeration='QuantLib::Average::Type'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>average type</description>
          </Parameter>
          <Parameter name='blackScholes' libraryClass='GeneralizedBlackScholesProcess'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>GeneralizedBlackScholesProcess object ID</description>
          </Parameter>
          <Parameter name='payoff' libraryClass='StrikedTypePayoff'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>striked type payoff object ID</description>
          </Parameter>
          <Parameter name='exercise' libraryClass='Exercise'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Exercise object ID</description>
          </Parameter>
          <Parameter name='pricingEngine' libraryClass='PricingEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>pricing engine object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!--Constructor name='qlCliquetOption'>
      <libraryFunction>CliquetOption</libraryFunction>
      <ParameterList>
        <Parameters>
          <Parameter name='blackScholes' libraryClass='GeneralizedBlackScholesProcess'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>GeneralizedBlackScholesProcess object ID</description>
          </Parameter>
          <Parameter name='payoff' libraryClass='PercentageStrikePayoff'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>striked type payoff object ID</description>
          </Parameter>
          <Parameter name='exercise' libraryClass='EuropeanExercise'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Exercise object ID</description>
          </Parameter>
          <Parameter name='resetDates' libraryType='QuantLib::Date'>
            <type>long</type>
            <tensorRank>vector</tensorRank>
            <description>vector of reset dates</description>
          </Parameter>
          <Parameter name='pricingEngine' libraryClass='PricingEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>pricing engine object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor-->

    <Constructor name='qlDaAsianOption'>
      <libraryFunction>DiscreteAveragingAsianOption</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='average' enumeration='QuantLib::Average::Type'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>average type</description>
          </Parameter>
          <Parameter name='runningAccumulator'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>running accumulator</description>
          </Parameter>
          <Parameter name='pastFixings'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>past fixings</description>
          </Parameter>
          <Parameter name='fixingDates' libraryType='QuantLib::Date'>
            <type>long</type>
            <tensorRank>vector</tensorRank>
            <description>fixing dates</description>
          </Parameter>
          <Parameter name='blackScholes' libraryClass='GeneralizedBlackScholesProcess'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>GeneralizedBlackScholesProcess object ID</description>
          </Parameter>
          <Parameter name='payoff' libraryClass='StrikedTypePayoff'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>striked type payoff object object ID</description>
          </Parameter>
          <Parameter name='exercise' libraryClass='Exercise'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Exercise object ID</description>
          </Parameter>
          <Parameter name='pricingEngine' libraryClass='PricingEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>pricing engine object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlDividendVanillaOption'>
      <libraryFunction>DividendVanillaOption</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='blackScholes' libraryClass='GeneralizedBlackScholesProcess'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>GeneralizedBlackScholesProcess object ID</description>
          </Parameter>
          <Parameter name='payoff' libraryClass='StrikedTypePayoff'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>striked type payoff object ID</description>
          </Parameter>
          <Parameter name='exercise' libraryClass='Exercise'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Exercise object ID</description>
          </Parameter>
          <Parameter name='dividendDates' libraryType='QuantLib::Date'>
            <type>long</type>
            <tensorRank>vector</tensorRank>
            <description>vector of dividend dates</description>
          </Parameter>
          <Parameter name='dividends'>
            <type>double</type>
            <tensorRank>vector</tensorRank>
            <description>vector of dividends</description>
          </Parameter>
          <Parameter name='pricingEngine' libraryClass='PricingEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>pricing engine object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlForwardVanillaOption'>
      <libraryFunction>ForwardVanillaOption</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='moneyness'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>moneyness</description>
          </Parameter>
          <Parameter name='resetDate'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>reset date</description>
          </Parameter>
          <Parameter name='blackScholes' libraryClass='GeneralizedBlackScholesProcess'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>GeneralizedBlackScholesProcess object ID</description>
          </Parameter>
          <Parameter name='payoff' libraryClass='StrikedTypePayoff'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>striked type payoff object ID</description>
          </Parameter>
          <Parameter name='exercise' libraryClass='Exercise'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Exercise object ID</description>
          </Parameter>
          <Parameter name='pricingEngine' libraryClass='PricingEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>pricing engine object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlVanillaOption'>
      <libraryFunction>VanillaOption</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
        <Calc/>
        <C/>
        <Guile/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='blackScholes' libraryClass='GeneralizedBlackScholesProcess'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>GeneralizedBlackScholesProcess object ID</description>
          </Parameter>
          <Parameter name='payoff' libraryClass='StrikedTypePayoff'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>striked type payoff object ID</description>
          </Parameter>
          <Parameter name='exercise' libraryClass='Exercise'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Exercise object ID</description>
          </Parameter>
          <Parameter name='pricingEngine' libraryClass='PricingEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>pricing engine object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlEuropeanOption'>
      <libraryFunction>EuropeanOption</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='blackScholes' libraryClass='GeneralizedBlackScholesProcess'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>GeneralizedBlackScholesProcess object ID</description>
          </Parameter>
          <Parameter name='payoff' libraryClass='StrikedTypePayoff'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>striked type payoff object ID</description>
          </Parameter>
          <Parameter name='exercise' libraryClass='Exercise'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Exercise object ID</description>
          </Parameter>
          <Parameter name='pricingEngine' libraryClass='PricingEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>pricing engine object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlQuantoVanillaOption'>
      <libraryFunction>QuantoVanillaOption</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='YieldCurve' libToHandle='YieldTermStructure'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>discounting yield term structure object ID</description>
          </Parameter>
          <Parameter name='blackVolID' libraryClass='BlackVolTermStructure'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>BlackVolTermStructure ID</description>
          </Parameter>
          <Parameter name='correlation'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>correlation</description>
          </Parameter>
          <Parameter name='blackScholes' libraryClass='GeneralizedBlackScholesProcess'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>GeneralizedBlackScholesProcess object ID</description>
          </Parameter>
          <Parameter name='payoff' libraryClass='StrikedTypePayoff'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>striked type payoff object ID</description>
          </Parameter>
          <Parameter name='exercise' libraryClass='Exercise'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Exercise object ID</description>
          </Parameter>
          <Parameter name='pricingEngine' libraryClass='PricingEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>pricing engine object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlQuantoForwardVanillaOption'>
      <libraryFunction>QuantoForwardVanillaOption</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='YieldCurve' libToHandle='YieldTermStructure'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>discounting yield term structure object ID</description>
          </Parameter>
          <Parameter name='blackVol' libraryClass='BlackVolTermStructure'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>BlackVolTermStructure object ID</description>
          </Parameter>
          <Parameter name='correlation'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>correlation</description>
          </Parameter>
          <Parameter name='moneyness'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>moneyness</description>
          </Parameter>
          <Parameter name='resetDate'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>reset date</description>
          </Parameter>
          <Parameter name='blackScholes' libraryClass='GeneralizedBlackScholesProcess'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>GeneralizedBlackScholesProcess object ID</description>
          </Parameter>
          <Parameter name='payoff' libraryClass='StrikedTypePayoff'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>striked type payoff object ID</description>
          </Parameter>
          <Parameter name='exercise' libraryClass='Exercise'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Exercise object ID</description>
          </Parameter>
          <Parameter name='pricingEngine' libraryClass='PricingEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>pricing engine object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Member name='qlDelta' libraryClass='OneAssetOption'>
      <description>delta of an option</description>
      <libraryFunction>delta</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlDeltaForward' libraryClass='OneAssetOption'>
      <description>delta forward of an option</description>
      <libraryFunction>deltaForward</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlElasticity' libraryClass='OneAssetOption'>
      <description>elasticity of an option</description>
      <libraryFunction>elasticity</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlGamma' libraryClass='OneAssetOption'>
      <description>gamma of an option</description>
      <libraryFunction>gamma</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlTheta' libraryClass='OneAssetOption'>
      <description>theta of an option</description>
      <libraryFunction>theta</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlThetaPerDay' libraryClass='OneAssetOption'>
      <description>theta per day of an option</description>
      <libraryFunction>thetaPerDay</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlVega' libraryClass='OneAssetOption'>
      <description>vega of an option</description>
      <libraryFunction>vega</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlRho' libraryClass='OneAssetOption'>
      <description>rho of an option</description>
      <libraryFunction>rho</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlDividendRho' libraryClass='OneAssetOption'>
      <description>dividend rho of an option</description>
      <libraryFunction>dividendRho</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlItmCashProbability' libraryClass='OneAssetOption'>
      <description>itm cash probability of an option</description>
      <libraryFunction>itmCashProbability</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

  </Functions>
</Category>
