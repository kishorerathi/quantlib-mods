
/*
 Copyright (C) 2005 Eric Ehlers

 This file is part of QuantLib, a free-software/open-source library
 for financial quantitative analysts and developers - http://quantlib.org/

 QuantLib is free software developed by the QuantLib Group; you can
 redistribute it and/or modify it under the terms of the QuantLib License;
 either version 1.0, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 QuantLib License for more details.

 You should have received a copy of the QuantLib License along with this
 program; if not, please email quantlib-dev@lists.sf.net

 The QuantLib License is also available at http://quantlib.org/license.html
 The members of the QuantLib Group are listed in the QuantLib License
*/

/*! \page history Version history

    <strong>Release 0.1.2 - October 2005</strong>

    REQUIRED PACKAGES
    - Boost version 1.31.0 or later
    - log4cxx version 0.9.7 or later

    CHANGES SINCE RELEASE 0.1.1
    - binding to Excel, can be linked statically into a single client XLL,
      or compiled as a standalone XLL comprising a global repository that
      can be shared by other XLLs in the Excel session
    - garbage collection of objects orphaned by the deletion of the
      calling cell
    - link to log4cxx dynamically rather than statically

    <strong>Release 0.1.1 - July 2005</strong>

    REQUIRED PACKAGES
    - Boost version 1.31.0 or later
    - log4cxx version 0.9.7 or later

    CHANGES SINCE RELEASE 0.1.0
    - interface layer replaced with factory function (thanks to Walter Penschke)
    - logging implemented with log4cxx framework from Apache project
    - additional functions deleteObject, deleteAllObjects
    - output manipulators for Object and ObjectHandler classes
    - utility functions consolidated

    <strong>Release 0.1.0 - February 2005</strong>

    REQUIRED PACKAGES
    - Boost version 1.31.0 or later

    OVERVIEW

    Initial release consisting of prototype framework:

    - Instantiate an Object in the ObjectHandler, from where it
      can be interrogated, altered, and destroyed.

*/

