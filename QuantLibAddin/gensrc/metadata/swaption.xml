<Category name='swaption'>
  <description>functions to construct and use Swaption objects</description>
  <displayName>Swaption</displayName>
  <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <includes>
    <include>qlo/swaption.hpp</include>
    <include>qlo/vanillaswap.hpp</include>
    <include>qlo/termstructures.hpp</include>
    <include>qlo/pricingengines.hpp</include>
    <include>qlo/exercise.hpp</include>
  </includes>
  <copyright>
    Copyright (C) 2006 Ferdinando Ametrano
    Copyright (C) 2006 Cristina Duminuco
    Copyright (C) 2006 Eric Ehlers
  </copyright>
  <Functions>

    <Constructor name='qlSwaption'>
      <libraryFunction>Swaption</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='vanillaSwap' libraryClass='VanillaSwap'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>underlying (vanilla) swap object ID</description>
          </Parameter>
          <Parameter name='Exercise' libraryClass='EuropeanExercise'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Exercise object ID</description>
          </Parameter>
          <Parameter name='YieldCurve' libToHandle='YieldTermStructure'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>discounting yield term structure object ID</description>
          </Parameter>
          <Parameter name='blackSwaptionEngine' libraryClass='BlackSwaptionEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>BlackSwaptionEngine object ID</description>
          </Parameter>
          <Parameter name='settlementType' enumeration='QuantLib::Settlement::Type'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>settlement type (PhysicalSettlement, CashSettlement)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

	<!--
	This function is commented out for the 0.3.14 release because
	it breaks QuantLibXLDynamic.
    <Member name='qlSwaptionUnderlyingSwap' objectClass='Swaption'>
      <description>returns the underlying swap for the given Swaption object</description>
      <libraryFunction>underlyingSwap</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters />
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member-->

    <Member name='qlSwaptionType' libraryClass='Swaption'>
      <description>returns the type (Payer or Receiver) for the given Swaption object</description>
      <libraryFunction>type</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters />
      </ParameterList>
      <ReturnValue enumeration='QuantLib::VanillaSwap::Type'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlSwaptionSettlementType' libraryClass='Swaption'>
      <description>returns the settlement type (Cash or Delivery) for the given Swaption object</description>
      <libraryFunction>settlementType</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters />
      </ParameterList>
      <ReturnValue enumeration='QuantLib::Settlement::Type'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlSwaptionImpliedVolatility' libraryClass='Swaption'>
      <description>returns the implied volatility for the given Swaption object</description>
      <libraryFunction>impliedVolatility</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='price' exampleValue ='0.2'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>Price used to infer the implied volatility</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlSwaptionAtmRate' libraryClass='Swaption'>
      <description>returns the at-the-money rate for the given Swaption object</description>
      <libraryFunction>atmRate</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters />
      </ParameterList>
      <ReturnValue libraryType='QuantLib::Rate'>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

  </Functions>
</Category>
