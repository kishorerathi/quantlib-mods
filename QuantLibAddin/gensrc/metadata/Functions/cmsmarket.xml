<Category name='cmsmarket'>
  <description>functions to construct and use CmsMarket objects</description>
  <displayName>Cms Market</displayName>
  <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <addinIncludes>
    <include>qlo/quotes.hpp</include>
    <include>qlo/cmsmarket.hpp</include>
    <include>qlo/couponvectors.hpp</include>
    <include>qlo/swaptionvolstructure.hpp</include>
    <include>qlo/conundrumpricer.hpp</include>
    <include>qlo/index.hpp</include>
  </addinIncludes>
  <serializationIncludes>
    <include>qlo/cmsmarket.hpp</include>
    <include>qlo/quotes.hpp</include>
    <include>qlo/couponvectors.hpp</include>
    <include>qlo/swaptionvolstructure.hpp</include>
    <include>qlo/conundrumpricer.hpp</include>
    <include>qlo/index.hpp</include>
  </serializationIncludes>
  <copyright>
    Copyright (C) 2006 Giorgio Facchinetti
  </copyright>
  <Functions>

    <!-- CmsMarket constructors -->

    <Constructor name='qlCmsMarket'>
      <libraryFunction>CmsMarket</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Expiries' exampleValue = '10Y'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>cms matrix's expiries as periods</description>
          </Parameter>
          <Parameter name='SwapIndices'>
            <type>QuantLib::SwapIndex</type>
            <tensorRank>vector</tensorRank>
            <description>SwapIndex object IDs</description>
          </Parameter>
          <Parameter name='BidsAsks' >
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>matrix</tensorRank>
            <description>matrix of bid and ask cms spreads quotes.</description>
          </Parameter>
          <Parameter name='YieldCurve' >
            <type>QuantLib::YieldTermStructure</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>discounting yield term structure object ID</description>
          </Parameter>
          <Parameter name='CmsCouponPricer'>
            <type>QuantLib::CmsCouponPricer</type>
            <tensorRank>vector</tensorRank>
            <description>Cms coupon pricer object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Member name='qlBrowseCmsMarket' type='QuantLibAddin::CmsMarket'>
      <description>return the market and implied spreads matrix</description>
      <libraryFunction>getCmsMarket</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Member>

  </Functions>
</Category>
