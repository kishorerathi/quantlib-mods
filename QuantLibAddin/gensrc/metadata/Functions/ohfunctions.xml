<Category name='ohfunctions'>
  <description>ObjectHandler functions</description>
  <displayName>ObjectHandler</displayName>
  <addinIncludes>
    <include>oh/objecthandler.hpp</include>
  </addinIncludes>
  <copyright>
    Copyright (C) 2006, 2007 Eric Ehlers
  </copyright>

  <Functions>

    <Procedure name='ohTrigger'>
      <description>forces a dependency between two functions and returns the update counter</description>
      <alias>ObjectHandler::dependsOn</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Calc' implementation='manual'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='dummy0' ignore='true' exampleValue='Trigger0'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy parameter (ignored)</description>
          </Parameter>
          <Parameter name='dummy1' ignore='true' exampleValue='Trigger1'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy parameter (ignored)</description>
          </Parameter>
          <Parameter name='dummy2' ignore='true' exampleValue='Trigger2'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy parameter (ignored)</description>
          </Parameter>
          <Parameter name='dummy3' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy parameter (ignored)</description>
          </Parameter>
          <Parameter name='dummy4' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy parameter (ignored)</description>
          </Parameter>
          <Parameter name='dummy5' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy parameter (ignored)</description>
          </Parameter>
          <Parameter name='dummy6' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy parameter (ignored)</description>
          </Parameter>
          <Parameter name='dummy7' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy parameter (ignored)</description>
          </Parameter>
          <Parameter name='dummy8' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy parameter (ignored)</description>
          </Parameter>
          <Parameter name='dummy9' ignore='true'>
            <type>any</type>
            <tensorRank>scalar</tensorRank>
            <description>dummy parameter (ignored)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohFunctionCount'>
      <description>returns the number of functions in this addin</description>
      <alias>ObjectHandler::version</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='documentationOnly'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohListObjectIDs'>
      <description>list the IDs of objects in repository matching regex</description>
      <alias>ObjectHandler::Repository::instance().listObjectIDs</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Calc'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='regex' exampleValue='EURYC'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>optional matching pattern in UNIX format (wildcard is .*)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohObjectCount'>
      <description>#/objects in repository</description>
      <alias>ObjectHandler::Repository::instance().objectCount</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Calc'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohPack'>
      <description>trim error values from bottom/right of matrix/vector</description>
      <alias>ObjectHandler::RepositoryXL::instance().packMatrix</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='documentationOnly'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='inputRange'>
            <type>any</type>
            <tensorRank>matrix</tensorRank>
            <description>scalar/vector/matrix of values to be packed</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohSplit' dependencyTrigger='False'>
      <description>Splits a string using delimiters</description>
      <alias>ObjectHandler::split</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='documentationOnly'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='text'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>string to be parsed</description>
          </Parameter>
          <Parameter name='delimiters' default='",;"'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>characters used as delimiters: each single character is used as delimiter (default = \";,\")</description>
          </Parameter>
          <Parameter name='concatenateDelim' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>specifies if multiple adjacent delimiters are to be considered as one (TRUE) or not (FALSE). Default value is FALSE.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohFilter' dependencyTrigger='False'>
      <description>Filters the first vector using the second one as boolean inclusion flags</description>
      <alias>ObjectHandler::filter</alias>
      <xlWizardRecalc>true</xlWizardRecalc>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='documentationOnly'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='input'>
            <type>any</type>
            <tensorRank>vector</tensorRank>
            <description>vector to be filtered</description>
          </Parameter>
          <Parameter name='flags'>
            <type>bool</type>
            <tensorRank>vector</tensorRank>
            <description>vector to inclusion flags</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohRetrieveError'>
      <description>retrieve error message associated with a given range</description>
      <alias>ObjectHandler::RepositoryXL::instance().retrieveError</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='documentationOnly'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='range'>
            <type>reference</type>
            <tensorRank>scalar</tensorRank>
            <description>range to query</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohVersion'>
      <description>returns the version number of ObjectHandler</description>
      <alias>ObjectHandler::version</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='documentationOnly'/>
        <SupportedPlatform name='Calc'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohObjectCallerAddress'>
      <description>retrieve address of cell in which object resides</description>
      <alias>ObjectHandler::RepositoryXL::instance().callerAddress</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='documentationOnly'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='objectID'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>ID of object to be queried</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
      </Procedure>

    <Procedure name='ohObjectCallerKey'>
      <description>retrieve unique ID of the CallingRange object associated with the cell in which object resides</description>
      <alias>ObjectHandler::RepositoryXL::instance().callerKey</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' implementation='documentationOnly'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='objectID'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>ID of object to be queried</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohDeleteAllObjects'>
      <description>delete all objects from repository</description>
      <alias>ObjectHandler::Repository::instance().deleteAllObjects</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Calc'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='deletePermanent' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>also delete permanent objects</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>void</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohDeleteObject'>
      <description>delete object from repository</description>
      <alias>ObjectHandler::Repository::instance().deleteObject</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Calc'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='ObjectID' exampleValue='DummyObject'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>ID of object to be deleted</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>void</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohLogAllObjects'>
      <description>write all object descriptions to log file</description>
      <alias>ObjectHandler::logAllObjects</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Calc'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>void</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohLogMessage'>
      <description>log a message</description>
      <alias>ObjectHandler::logMessage</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Calc'/>
        <SupportedPlatform name='C'/>
        <SupportedPlatform name='Guile'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='logMessage' exampleValue='Log this message'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>message to be logged</description>
          </Parameter>
          <Parameter name='logLevel' default='4'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>threshold for log messages</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>void</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohLogObject'>
      <description>write object description to log file</description>
      <alias>ObjectHandler::logObject</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Calc'/>
        <SupportedPlatform name='C'/>
        <SupportedPlatform name='Guile'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='objectID' exampleValue='DummyObject'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>ID of object to be logged</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>void</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Member name='ohPropertyNames' type='QuantLibAddin::Object'>
      <description>retrieve the property names of a given object</description>
      <libraryFunction>propertyNames</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Calc' implementation='manual'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='ohPropertyValue' type='ObjectHandler::Object' dependencyTrigger='true' loopParameter='propertyName'>
      <description>retrieve the value(s) of one or more named properties</description>
      <libraryFunction>propertyValue</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Calc' implementation='manual'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='propertyName'>
            <type>string</type>
            <tensorRank>vector</tensorRank>
            <description>property name(s) to be queried</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Procedure name='ohSetLogFile'>
      <description>begin logging to named file</description>
      <alias>ObjectHandler::setLogFile</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Calc'/>
        <SupportedPlatform name='C'/>
        <SupportedPlatform name='Guile'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='logFileName' exampleValue='MyLogFile'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>path and name of log file</description>
          </Parameter>
          <Parameter name='logLevel' default='4'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>threshold for log messages</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohSetLogLevel'>
      <description>set threshold for log messages</description>
      <alias>ObjectHandler::setLogLevel</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='Calc'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='logLevel'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>threshold for log messages</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>void</type>
        <tensorRank>scalar</tensorRank>
        <description>returns new logging threshold</description>
      </ReturnValue>
    </Procedure>

    <Procedure name='ohSetConsole'>
      <description>fork output to stdout</description>
      <alias>ObjectHandler::setConsole</alias>
      <SupportedPlatforms>
        <SupportedPlatform name='C'/>
        <SupportedPlatform name='Guile'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='console'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>1 (enable) / 0 (disable)</description>
          </Parameter>
          <Parameter name='logLevel' default='4'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>threshold for log messages</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>void</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Procedure>

  </Functions>
</Category>

