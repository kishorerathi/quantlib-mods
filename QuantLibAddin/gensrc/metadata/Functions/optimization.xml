<Category name='optimization'>
  <description>functions to construct and use Optimization objects</description>
  <displayName>Optimization</displayName>
  <xlFunctionWizardCategory>QuantLib - Math</xlFunctionWizardCategory>
  <includes>
    <include>qlo/optimization.hpp</include>
  </includes>
  <copyright>
    Copyright (C) 2006, 2007 Ferdinando Ametrano
  </copyright>

  <Functions>

    <!-- EndCriteria class and interface -->

    <Member name='qlEndCriteriaMaxIterations' type='QuantLib::EndCriteria'>
      <description>Returns the number of max interation for the given EndCriteria object</description>
      <libraryFunction>maxIterations</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Size</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlEndCriteriaMaxStationaryStateIterations' type='QuantLib::EndCriteria'>
      <description>Returns the number of max interation in a stationary state for the given EndCriteria object</description>
      <libraryFunction>maxStationaryStateIterations</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Size</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlEndCriteriaFunctionEpsilon' type='QuantLib::EndCriteria'>
      <description>Returns the function epsilon for the given EndCriteria object</description>
      <libraryFunction>functionEpsilon</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Real</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlEndCriteriaGradientEpsilon' type='QuantLib::EndCriteria'>
      <description>Returns the gradient epsilon for the given EndCriteria object</description>
      <libraryFunction>gradientEpsilon</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Real</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlEndCriteria'>
      <libraryFunction>EndCriteria</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='maxIter' default='1000'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>max number of iterations. Default is 1000</description>
          </Parameter>
          <Parameter name='functionEpsilon' default='1e-8'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>tolerance on the function value. Default is 1e-8</description>
          </Parameter>
          <Parameter name='gradientEpsilon' default='1e-8'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>tolerance on the function gradient. Default is 1e-8</description>
          </Parameter>
          <Parameter name='maxStatStateIter' default='100'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>max number of iterations in a stationary state. Default is 100</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- OptimizationMethod derived classes' constructors -->

    <Constructor name='qlSimplex'>
      <libraryFunction>Simplex</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name="lambda" exampleValue="0.01">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>lambda</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlLevenbergMarquardt'>
      <libraryFunction>LevenbergMarquardt</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name="epsfcn" libraryType="QuantLib::Real" default="1.0e-8">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>epsfcn</description>
          </Parameter>
          <Parameter name="xtol" libraryType="QuantLib::Real" default="1.0e-8">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>xtol</description>
          </Parameter>
          <Parameter name="gtol" libraryType="QuantLib::Real" default="1.0e-8">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>gtol</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlConjugateGradient'>
      <libraryFunction>ConjugateGradient</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name="lineSearch" default='""'>
            <type>QuantLib::LineSearch</type>
            <tensorRank>scalar</tensorRank>
            <description>LineSearch object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlSteepestDescent'>
      <libraryFunction>SteepestDescent</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name="lineSearch" default='""'>
            <type>QuantLib::LineSearch</type>
            <tensorRank>scalar</tensorRank>
            <description>LineSearch object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- LineSearch derived classes' constructors -->

    <Constructor name='qlArmijoLineSearch'>
      <libraryFunction>ArmijoLineSearch</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name="epsilon" default="1e-8">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>epsilon</description>
          </Parameter>
          <Parameter name="alpha" default="0.05">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>alpha</description>
          </Parameter>
          <Parameter name="beta" default="0.65">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>beta</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

  </Functions>

</Category>
