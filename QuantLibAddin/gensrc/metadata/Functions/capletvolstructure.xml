<Category name='capletvolstructure'>
  <description>functions to construct and use CapletVolatilityStructure objects</description>
  <displayName>Caplet Volatility Term Structures</displayName>
  <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <addinIncludes>
    <include>qlo/index.hpp</include>
    <include>qlo/capletvolstructure.hpp</include>
    <include>qlo/quotes.hpp</include>
    <include>qlo/swaptionvolstructure.hpp</include>
    <include>ql/termstructures/volatilities/interestrate/caplet/capletconstantvol.hpp</include>
    <include>ql/termstructures/volatilities/interestrate/caplet/capstripper.hpp</include>
    <include>ql/termstructures/volatilities/interestrate/cap/capflatvolvector.hpp</include>
    <include>ql/termstructures/volatilities/interestrate/cap/capvolsurface.hpp</include>
    <include>ql/indexes/iborindex.hpp</include>
  </addinIncludes>
  <serializationIncludes>
    <include>qlo/capletvolstructure.hpp</include>
    <include>qlo/index.hpp</include>
    <include>qlo/quotes.hpp</include>
    <include>qlo/swaptionvolstructure.hpp</include>
    <include>ql/termstructures/volatilities/interestrate/caplet/capletconstantvol.hpp</include>
    <include>ql/termstructures/volatilities/interestrate/caplet/capstripper.hpp</include>
    <include>ql/indexes/iborindex.hpp</include>
  </serializationIncludes>
  <copyright>
    Copyright (C) 2006 Ferdinando Ametrano
  </copyright>
  <Functions>

    <!-- CapletVolatilityStructure interface-->
    <Member name='qlCapletVTSVolatility' type='QuantLib::CapletVolatilityStructure' superType='handleToLib' loopParameter='Strike'>
      <description>Returns volatility from the given CapletVolatilityStructure object.</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionDate' exampleValue ='5y'>
            <type>QuantLib::Date</type>
            <tensorRank>scalar</tensorRank>
            <description>caplet/floorlet expiry date</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>caplet/floorlet strike</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapletVTSVolatility2' type='QuantLib::CapletVolatilityStructure' superType='handleToLib' loopParameter='Strike'>
      <description>Returns volatility from the given CapletVolatilityStructure object.</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionTenor' exampleValue ='5y'>
            <type>QuantLib::Period</type>
            <tensorRank>scalar</tensorRank>
            <description>caplet/floorlet option tenor</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>caplet/floorlet strike</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>
    
    <Member name='qlCapletVTSBlackVariance' type='QuantLib::CapletVolatilityStructure' superType='handleToLib' loopParameter='OptionDate'>
      <description>Returns a vector of black volatilities corresponding to a vector of strikes for a given exercise date.</description>
      <libraryFunction>blackVariance</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionDate' exampleValue ='5y'>
            <type>QuantLib::Date</type>
            <tensorRank>vector</tensorRank>
            <description>cap/floor expiry date</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>scalar</tensorRank>
            <description>cap/floor strike vector</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapletVTSBlackVariance2' type='QuantLib::CapletVolatilityStructure' superType='handleToLib' loopParameter='OptionTenor'>
      <description>Returns a vector of black volatilities corresponding to a vector of strikes for a given exercise date.</description>
      <libraryFunction>blackVariance</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionTenor' exampleValue ='5y'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>cap/floor expiry date</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>scalar</tensorRank>
            <description>cap/floor strike vector</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapletVTSMinStrike' type='QuantLib::CapletVolatilityStructure' superType='handleToLib'>
      <description>Returns the minimum strike for which the given CapletVolatilityStructure can return vols.</description>
      <libraryFunction>minStrike</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapletVTSMaxStrike' type='QuantLib::CapletVolatilityStructure' superType='libraryClass'>
      <description>Returns the maximum strike for which the given CapletVolatilityStructure can return vols.</description>
      <libraryFunction>maxStrike</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <!-- RelinkableHandle<CapletVolatilityStructure> -->
    <Constructor name='qlRelinkableHandleCapletVolatilityStructure'>
      <libraryFunction>RelinkableHandle&lt;QuantLib::CapletVolatilityStructure&gt;</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='CurrentLink' default='""'>
            <type>QuantLib::CapletVolatilityStructure</type>
            <superType>libraryClass</superType>
            <tensorRank>scalar</tensorRank>
            <description>CapletVolatilityStructure object ID. If omitted, nothing is linked by the RelinkableHandle.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Member name='qlRelinkableHandleCapletVolatilityStructureLinkTo' type='QuantLib::CapletVolatilityStructure' superType='objectHandle'>
      <libraryFunction>linkTo</libraryFunction>
      <description>relink handle</description>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='CurrentLink' >
            <type>QuantLib::CapletVolatilityStructure</type>
            <superType>libraryClass</superType>
            <tensorRank>scalar</tensorRank>
            <description>CapletVolatilityStructure object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>void</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>
    
    <!-- CapletVolatilityStructure constructors -->
    <Constructor name='qlCapletVTSConstant'>
      <libraryFunction>CapletConstantVolatility</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Volatility' >
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>cap/floor constant volatility Quote</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/360)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- CapsStripper interface-->
    <Member name='qlCapsStripperStrikes' type='QuantLib::CapsStripper'>
      <description>Returns the vector of cap strikes underlying the given ObjectID.</description>
      <libraryFunction>strikes</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapsStripperTenors' type='QuantLib::CapsStripper'>
      <description>Returns the vector of cap tenors underlying the given ObjectID.</description>
      <libraryFunction>tenors</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Period</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlCapsStripper'>
      <libraryFunction>CapsStripper</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='CapTenors'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>cap lengths.</description>
          </Parameter>
          <Parameter name='CapStrikes'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>cap strikes.</description>
          </Parameter>
          <Parameter name='Volatilities' >
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>matrix</tensorRank>
            <description>cap volatilities.</description>
          </Parameter>
          <Parameter name='Index'>
            <type>QuantLib::IborIndex</type>
            <tensorRank>scalar</tensorRank>
            <description>cap index object ID</description>
          </Parameter>
          <Parameter name='YieldCurve' >
            <type>QuantLib::YieldTermStructure</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>discounting yield term structure object ID</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/360)</description>
          </Parameter>
          <Parameter name='ImpliedVolatilityAccuracy'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>implied Volatility Accuracy.</description>
          </Parameter>
          <Parameter name='MaxEvaluations'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>implied Volatility max Evaluations.</description>
          </Parameter>
          <Parameter name='DecoupledInterpolation' const='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Used decoupled interpolations</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlCapsStripper2'>
      <libraryFunction>CapsStripper</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='CapTenors'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>cap lengths.</description>
          </Parameter>
          <Parameter name='CapStrikes'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>cap strikes.</description>
          </Parameter>
          <Parameter name='Volatilities' >
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>matrix</tensorRank>
            <description>cap volatilities.</description>
          </Parameter>
          <Parameter name='Index'>
            <type>QuantLib::IborIndex</type>
            <tensorRank>scalar</tensorRank>
            <description>cap index object ID</description>
          </Parameter>
          <Parameter name='YieldCurve' >
            <type>QuantLib::YieldTermStructure</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>discounting yield term structure object ID</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/360)</description>
          </Parameter>
          <Parameter name='ImpliedVolatilityAccuracy'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>implied Volatility Accuracy.</description>
          </Parameter>
          <Parameter name='MaxEvaluations'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>implied Volatility max Evaluations.</description>
          </Parameter>
          <Parameter name='SmileSections'>
            <type>QuantLib::SmileSection</type>
            <tensorRank>vector</tensorRank>
            <description>smile sections object IDs</description>
          </Parameter>
          <Parameter name='DecoupledInterpolation' const='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Used decoupled interpolations</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlSmileSectionsVolStructure'>
      <libraryFunction>SmileSectionsVolStructure</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='ReferenceDate'>
            <type>QuantLib::Date</type>
            <tensorRank>scalar</tensorRank>
            <description>reference date</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/360)</description>
          </Parameter>
          <Parameter name='SmileSections'>
            <type>QuantLib::SmileSection</type>
            <tensorRank>vector</tensorRank>
            <description>smile sections object IDs</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlSpreadedCapletVolatilityStructure'>
      <libraryFunction>SpreadedCapletVolatilityStructure</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='CapletVolatilityStructure' >
            <type>QuantLib::CapletVolatilityStructure</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>Caplet volatility structure object ID</description>
          </Parameter>
          <Parameter name='Spread'>
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>spread</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!--<Constructor name='qlGenericCapletVolStructure'>
      <libraryFunction>GenericCapletVolStructure</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Volatilities' >
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>matrix</tensorRank>
            <description>vol quotes</description>
          </Parameter>
          <Parameter name='Strikes' exampleValue ='3%'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>caplet strike</description>
          </Parameter>
          <Parameter name='TenorTimes' exampleValue ='0.5, 3'>
            <type>QuantLib::Time</type>
            <tensorRank>vector</tensorRank>
            <description>caplet time</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>-->

    <!-- SwaptionVolatilityStructure interface-->
    <Member name='qlCapTermVolVectorVolatility' type='QuantLib::CapVolatilityVector' superType='handleToLib'>
      <description>Returns interpolated volatility from the given cap term vols object.</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionLength' exampleValue ='5y'>
            <type>QuantLib::Period</type>
            <tensorRank>scalar</tensorRank>
            <description>option length</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='3%' default='QuantLib::Null&lt;QuantLib::Size&gt;()'>
            <type>QuantLib::Rate</type>
            <tensorRank>scalar</tensorRank>
            <description>cap strike</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>
    
    <Constructor name='qlCapTermVolVector'>
      <libraryFunction>CapVolatilityVector</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='SettlementDays' exampleValue ='0'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>number of settlement days</description>
          </Parameter>
          <Parameter name='Calendar'>
            <type>QuantLib::Calendar</type>
            <tensorRank>scalar</tensorRank>
            <description>holiday calendar (e.g. TARGET) used for calculating the exercise dates from the expiries</description>
          </Parameter>
          <Parameter name='OptionLengths' exampleValue ='5Y, 10Y'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>option tenors</description>
          </Parameter>
          <Parameter name='Volatilities'>
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>vector</tensorRank>
            <description>vol quotes</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/360)</description>
          </Parameter>        
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- SwaptionVolatilityStructure interface-->
    <Member name='qlCapTermVolSurfaceVolatility' type='QuantLib::CapVolatilitySurface' superType='handleToLib'>
      <description>Returns interpolated volatility from the given cap term vols object</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionLength' exampleValue ='5y'>
            <type>QuantLib::Period</type>
            <tensorRank>scalar</tensorRank>
            <description>cap length</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='3%' default='QuantLib::Null&lt;QuantLib::Size&gt;()'>
            <type>QuantLib::Rate</type>
            <tensorRank>scalar</tensorRank>
            <description>cap strike</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>
    
    <Constructor name='qlCapTermVolSurface'>
      <libraryFunction>CapVolatilitySurface</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='SettlementDays' exampleValue ='0'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>number of settlement days</description>
          </Parameter>
          <Parameter name='Calendar'>
            <type>QuantLib::Calendar</type>
            <tensorRank>scalar</tensorRank>
            <description>holiday calendar (e.g. TARGET) used for calculating the exercise dates from the expiries</description>
          </Parameter>
          <Parameter name='OptionLenghts' exampleValue ='5Y, 10Y'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>option tenors</description>
          </Parameter>
          <Parameter name='CapStrikes'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>cap strikes</description>
          </Parameter>
          <Parameter name='Volatilities'>
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>matrix</tensorRank>
            <description>vol quotes</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/365)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>
    
  </Functions>
</Category>
