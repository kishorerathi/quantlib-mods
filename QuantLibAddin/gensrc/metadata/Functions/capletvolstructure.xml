<Category name='capletvolstructure'>
  <description>functions to construct and use OptionletVolatilityStructure objects</description>
  <displayName>Caplet Volatility Term Structures</displayName>
  <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <addinIncludes>
    <include>qlo/index.hpp</include>
    <include>qlo/capletvolstructure.hpp</include>
    <include>qlo/quotes.hpp</include>
    <include>qlo/swaptionvolstructure.hpp</include>
    <include>qlo/handleimpl.hpp</include>
    <include>ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp</include>
    <include>ql/termstructures/volatility/optionlet/constantoptionletvol.hpp</include>
    <include>ql/termstructures/volatility/optionlet/optionletstripper1.hpp</include>
    <include>ql/termstructures/volatility/optionlet/optionletstripper2.hpp</include>
    <include>ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp</include>
    <include>ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp</include>
    <include>ql/indexes/iborindex.hpp</include>
  </addinIncludes>
  <serializationIncludes>
    <include>qlo/capletvolstructure.hpp</include>
    <include>qlo/index.hpp</include>
    <include>qlo/quotes.hpp</include>
    <include>qlo/swaptionvolstructure.hpp</include>
    <include>ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp</include>
    <include>ql/termstructures/volatility/optionlet/constantoptionletvol.hpp</include>
    <include>ql/termstructures/volatility/optionlet/optionletstripper1.hpp</include>
    <include>ql/termstructures/volatility/optionlet/optionletstripper2.hpp</include>
    <include>ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp</include>
    <include>ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp</include>
    <include>ql/indexes/iborindex.hpp</include>
  </serializationIncludes>
  <copyright>
    Copyright (C) 2006, 2007 Ferdinando Ametrano
  </copyright>
  <Functions>

    <!-- OptionletVolatilityStructure interface-->
    <Member name='qlOptionletVTSVolatility' type='QuantLib::OptionletVolatilityStructure' superType='handleToLib' loopParameter='Strike'>
      <description>Returns volatility from the given OptionletVolatilityStructure object.</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionDate' exampleValue ='5y'>
            <type>QuantLib::Date</type>
            <tensorRank>scalar</tensorRank>
            <description>caplet/floorlet expiry date</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>caplet/floorlet strike</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletVTSVolatility2' type='QuantLib::OptionletVolatilityStructure' superType='handleToLib' loopParameter='Strike'>
      <description>Returns volatility from the given OptionletVolatilityStructure object.</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionTenor' exampleValue ='5y'>
            <type>QuantLib::Period</type>
            <tensorRank>scalar</tensorRank>
            <description>caplet/floorlet option tenor</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>caplet/floorlet strike</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletVTSBlackVariance' type='QuantLib::OptionletVolatilityStructure' superType='handleToLib' loopParameter='OptionDate'>
      <description>Returns a vector of black volatilities corresponding to a vector of strikes for a given exercise date.</description>
      <libraryFunction>blackVariance</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionDate' exampleValue ='5y'>
            <type>QuantLib::Date</type>
            <tensorRank>vector</tensorRank>
            <description>cap/floor expiry date</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>scalar</tensorRank>
            <description>cap/floor strike vector</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletVTSBlackVariance2' type='QuantLib::OptionletVolatilityStructure' superType='handleToLib' loopParameter='OptionTenor'>
      <description>Returns a vector of black volatilities corresponding to a vector of strikes for a given exercise date.</description>
      <libraryFunction>blackVariance</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionTenor' exampleValue ='5y'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>cap/floor expiry date</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>scalar</tensorRank>
            <description>cap/floor strike vector</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletVTSMinStrike' type='QuantLib::OptionletVolatilityStructure' superType='handleToLib'>
      <description>Returns the minimum strike for which the given OptionletVolatilityStructure can return vols.</description>
      <libraryFunction>minStrike</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletVTSMaxStrike' type='QuantLib::OptionletVolatilityStructure' superType='handleToLib'>
      <description>Returns the maximum strike for which the given OptionletVolatilityStructure can return vols.</description>
      <libraryFunction>maxStrike</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <!-- RelinkableHandle<OptionletVolatilityStructure> -->
    <Constructor name='qlRelinkableHandleOptionletVolatilityStructure'>
      <libraryFunction>RelinkableHandleImpl&lt;QuantLibAddin::OptionletVolatilityStructure, QuantLib::OptionletVolatilityStructure&gt;</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='CurrentLink' default='""'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>OptionletVolatilityStructure object ID. If omitted, nothing is linked by the RelinkableHandle.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- OptionletVolatilityStructure constructors -->
    <Constructor name='qlConstantOptionletVol'>
      <libraryFunction>ConstantOptionletVol</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Volatility' >
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>cap/floor constant volatility Quote</description>
          </Parameter>
          <Parameter name='Calendar' exampleValue='TARGET'>
            <type>QuantLib::Calendar</type>
            <tensorRank>scalar</tensorRank>
            <description>holiday calendar (e.g. TARGET) used for calculating the exercise dates from the expiries</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/360)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlSpreadedOptionletVol'>
      <libraryFunction>SpreadedOptionletVol</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionletVolatilityStructure' >
            <type>QuantLib::OptionletVolatilityStructure</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>Caplet volatility structure object ID</description>
          </Parameter>
          <Parameter name='Spread'>
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>spread</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlOptionletStripperAdapter'>
      <libraryFunction>OptionletStripperAdapter</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionletStripper' >
            <type>QuantLib::OptionletStripper</type>
            <superType>libraryClass</superType>
            <tensorRank>scalar</tensorRank>
            <description>Optionlet Stripper object id</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- OptionletStripper interface and constructor -->
    <Member name='qlOptionletStripperCapFloorPrices' type='QuantLib::OptionletStripper1' superType='libraryClass'>
      <description></description>
      <libraryFunction>capFloorPrices</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Matrix</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripperCapFloorVolatilities' type='QuantLib::OptionletStripper1' superType='libraryClass'>
      <description></description>
      <libraryFunction>capFloorVolatilities</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Matrix</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripperOptionletPrices' type='QuantLib::OptionletStripper1' superType='libraryClass'>
      <description></description>
      <libraryFunction>optionletPrices</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Matrix</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripperSwitchStrike' type='QuantLib::OptionletStripper1' superType='libraryClass'>
      <description></description>
      <libraryFunction>switchStrike</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripperOptionletVolatility' type='QuantLib::OptionletStripper' superType='libraryClass'>
      <description></description>
      <libraryFunction>optionletVolatilities</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Index'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>index of optionlet</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripperStrike' type='QuantLib::OptionletStripper' superType='libraryClass'>
      <description></description>
      <libraryFunction>optionletStrikes</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Index'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>index of optionlet</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripperOptionletTenors' type='QuantLib::OptionletStripper' superType='libraryClass'>
      <description></description>
      <libraryFunction>optionletTenors</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Period</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripperOptionletDates' type='QuantLib::OptionletStripper' superType='libraryClass'>
      <description></description>
      <libraryFunction>optionletDates</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Date</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripperOptionletTimes' type='QuantLib::OptionletStripper' superType='libraryClass'>
      <description></description>
      <libraryFunction>optionletTimes</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Time</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripperOptionletPaymentDates' type='QuantLib::OptionletStripper' superType='libraryClass'>
      <description></description>
      <libraryFunction>optionletPaymentDates</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Date</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>



    <Constructor name='qlOptionletStripper'>
      <libraryFunction>OptionletStripper1</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='CapFloorTermVolSurface' >
            <type>QuantLib::CapFloorTermVolSurface</type>
            <superType>libraryClass</superType>
            <tensorRank>scalar</tensorRank>
            <description>Cap VolatilitySurface.</description>
          </Parameter>
          <Parameter name='Index'>
            <type>QuantLib::IborIndex</type>
            <tensorRank>scalar</tensorRank>
            <description>cap index object ID</description>
          </Parameter>
          <Parameter name='SwitchStrike' default='QuantLib::Null&lt;QuantLib::Rate&gt;()'>
            <type>QuantLib::Rate</type>
            <tensorRank>scalar</tensorRank>
            <description>switch strike. If omitted, internal default is used</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- OptionletStripper2 interface and constructor -->
    <Member name='qlOptionletStripper2SpreadsVol' type='QuantLib::OptionletStripper2' superType='libraryClass'>
      <description></description>
      <libraryFunction>spreadsVol</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripper2AtmCapFloorPrice' type='QuantLib::OptionletStripper2' superType='libraryClass'>
      <description></description>
      <libraryFunction>atmCapFloorPrices</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Real</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripper2AtmCapFloorStrikes' type='QuantLib::OptionletStripper2' superType='libraryClass'>
      <description></description>
      <libraryFunction>atmCapFloorStrikes</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlOptionletStripper2'>
      <libraryFunction>OptionletStripper2</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionletStripper' >
            <type>QuantLib::OptionletStripper1</type>
            <superType>libraryClass</superType>
            <tensorRank>scalar</tensorRank>
            <description>Optionlet Stripper object id</description>
          </Parameter>
          <Parameter name='CapFloorTermVolCurve' >
            <type>QuantLib::CapFloorTermVolCurve</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>Cap VolatilityCurve.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>


    <!-- CapFloorTermVolStructure interface -->
    <Member name='qlCapFloorTermVTSVolatility' type='QuantLib::CapFloorTermVolatilityStructure' superType='libraryClass' loopParameter='Strike'>
      <description>Returns volatility from the given OptionletVolatilityStructure object.</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionDate' exampleValue ='5y'>
            <type>QuantLib::Date</type>
            <tensorRank>scalar</tensorRank>
            <description>caplet/floorlet expiry date</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>caplet/floorlet strike</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorTermVTSVolatility2' type='QuantLib::CapFloorTermVolatilityStructure' superType='libraryClass' loopParameter='Strike'>
      <description>Returns volatility from the given OptionletVolatilityStructure object.</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionTenor' exampleValue ='5y'>
            <type>QuantLib::Period</type>
            <tensorRank>scalar</tensorRank>
            <description>caplet/floorlet option tenor</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>caplet/floorlet strike</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorTermVTSMinStrike' type='QuantLib::CapFloorTermVolatilityStructure' superType='libraryClass'>
      <description>Returns the minimum strike for which the given OptionletVolatilityStructure can return vols.</description>
      <libraryFunction>minStrike</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorTermVTSMaxStrike' type='QuantLib::CapFloorTermVolatilityStructure' superType='libraryClass'>
      <description>Returns the maximum strike for which the given OptionletVolatilityStructure can return vols.</description>
      <libraryFunction>maxStrike</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <!-- CapFloorTermVolCurve interface and constructor -->
    <Member name='qlCapFloorTermVolVectorOptionTenors' type='QuantLib::CapFloorTermVolCurve' superType='libraryClass'>
      <description></description>
      <libraryFunction>optionTenors</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Period</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorTermVolVectorOptionDates' type='QuantLib::CapFloorTermVolCurve' superType='libraryClass'>
      <description></description>
      <libraryFunction>optionDates</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Date</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlCapFloorTermVolCurve'>
      <libraryFunction>CapFloorTermVolCurve</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='SettlementDays' exampleValue ='0'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>number of settlement days</description>
          </Parameter>
          <Parameter name='Calendar'>
            <type>QuantLib::Calendar</type>
            <tensorRank>scalar</tensorRank>
            <description>holiday calendar (e.g. TARGET) used for calculating the exercise dates from the expiries</description>
          </Parameter>
          <Parameter name='OptionLengths' exampleValue ='5Y, 10Y'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>option tenors</description>
          </Parameter>
          <Parameter name='Volatilities'>
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>vector</tensorRank>
            <description>vol quotes</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/360)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- CapFloorTermVolSurface interface and constructor -->
    <Member name='qlCapFloorTermVolSurfaceOptionTenors' type='QuantLib::CapFloorTermVolSurface' superType='libraryClass'>
      <description></description>
      <libraryFunction>optionTenors</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Period</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorTermVolSurfaceOptionDates' type='QuantLib::CapFloorTermVolSurface' superType='libraryClass'>
      <description></description>
      <libraryFunction>optionDates</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Date</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorTermVolSurfaceStrikes' type='QuantLib::CapFloorTermVolSurface' superType='libraryClass'>
      <description></description>
      <libraryFunction>strikes</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlCapFloorTermVolSurface'>
      <libraryFunction>CapFloorTermVolSurface</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='SettlementDays' exampleValue='0'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>number of settlement days</description>
          </Parameter>
          <Parameter name='Calendar' exampleValue='TARGET'>
            <type>QuantLib::Calendar</type>
            <tensorRank>scalar</tensorRank>
            <description>holiday calendar (e.g. TARGET) used for calculating the exercise dates from the expiries</description>
          </Parameter>
          <Parameter name='OptionLenghts' exampleValue ='5Y, 10Y'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>option tenors</description>
          </Parameter>
          <Parameter name='CapStrikes'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>cap strikes</description>
          </Parameter>
          <Parameter name='Volatilities'>
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>matrix</tensorRank>
            <description>vol quotes</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/365)</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- other stuff -->

    <Constructor name='qlSmileSectionsVolStructure'>
      <libraryFunction>SmileSectionsVolStructure</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='ReferenceDate'>
            <type>QuantLib::Date</type>
            <tensorRank>scalar</tensorRank>
            <description>reference date</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/360)</description>
          </Parameter>
          <Parameter name='SmileSections'>
            <type>QuantLib::SmileSection</type>
            <tensorRank>vector</tensorRank>
            <description>smile sections object IDs</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- CapsStripper interface and constructors -->
    <Member name='qlCapsStripperStrikes' type='QuantLib::CapsStripper' superType='libraryClass'>
      <description>Returns the vector of cap strikes underlying the given ObjectID.</description>
      <libraryFunction>strikes</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapsStripperTenors' type='QuantLib::CapsStripper' superType='libraryClass'>
      <description>Returns the vector of cap tenors underlying the given ObjectID.</description>
      <libraryFunction>tenors</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Period</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlCapsStripper'>
      <libraryFunction>CapsStripper</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='CapTenors'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>cap lengths.</description>
          </Parameter>
          <Parameter name='CapStrikes'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>cap strikes.</description>
          </Parameter>
          <Parameter name='Volatilities' >
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>matrix</tensorRank>
            <description>cap volatilities.</description>
          </Parameter>
          <Parameter name='Index'>
            <type>QuantLib::IborIndex</type>
            <tensorRank>scalar</tensorRank>
            <description>cap index object ID</description>
          </Parameter>
          <Parameter name='YieldCurve' >
            <type>QuantLib::YieldTermStructure</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>discounting yield term structure object ID</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/360)</description>
          </Parameter>
          <Parameter name='ImpliedVolatilityAccuracy'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>implied Volatility Accuracy.</description>
          </Parameter>
          <Parameter name='MaxEvaluations'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>implied Volatility max Evaluations.</description>
          </Parameter>
          <Parameter name='DecoupledInterpolation' const='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Used decoupled interpolations</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlCapsStripper2'>
      <libraryFunction>CapsStripper</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='CapTenors'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>cap lengths.</description>
          </Parameter>
          <Parameter name='CapStrikes'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>cap strikes.</description>
          </Parameter>
          <Parameter name='Volatilities' >
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>matrix</tensorRank>
            <description>cap volatilities.</description>
          </Parameter>
          <Parameter name='Index'>
            <type>QuantLib::IborIndex</type>
            <tensorRank>scalar</tensorRank>
            <description>cap index object ID</description>
          </Parameter>
          <Parameter name='YieldCurve' >
            <type>QuantLib::YieldTermStructure</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>discounting yield term structure object ID</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/360)</description>
          </Parameter>
          <Parameter name='ImpliedVolatilityAccuracy'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>implied Volatility Accuracy.</description>
          </Parameter>
          <Parameter name='MaxEvaluations'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>implied Volatility max Evaluations.</description>
          </Parameter>
          <Parameter name='SmileSections'>
            <type>QuantLib::SmileSection</type>
            <tensorRank>vector</tensorRank>
            <description>smile sections object IDs</description>
          </Parameter>
          <Parameter name='DecoupledInterpolation' const='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Used decoupled interpolations</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlCapsStripper3'>
      <libraryFunction>CapsStripper</libraryFunction>
      <functionCategory>QuantLib</functionCategory>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='CapTenors'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>cap lengths.</description>
          </Parameter>
          <Parameter name='CapStrikes'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>cap strikes.</description>
          </Parameter>
          <Parameter name='CapFloorTermVolSurface' >
            <type>QuantLib::CapFloorTermVolSurface</type>
            <superType>libraryClass</superType>
            <tensorRank>scalar</tensorRank>
            <description>Cap VolatilitySurface.</description>
          </Parameter>
          <Parameter name='Index'>
            <type>QuantLib::IborIndex</type>
            <tensorRank>scalar</tensorRank>
            <description>cap index object ID</description>
          </Parameter>
          <Parameter name='TimeStep'>
            <type>QuantLib::Period</type>
            <tensorRank>scalar</tensorRank>
            <description>TimeStep</description>
          </Parameter>
          <Parameter name='YieldCurve' >
            <type>QuantLib::YieldTermStructure</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>discounting yield term structure object ID</description>
          </Parameter>
          <Parameter name='DayCounter'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>day counter (e.g. Actual/360)</description>
          </Parameter>
          <Parameter name='ImpliedVolatilityAccuracy'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>implied Volatility Accuracy.</description>
          </Parameter>
          <Parameter name='MaxEvaluations'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>implied Volatility max Evaluations.</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='true'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Allow extrapolations</description>
          </Parameter>
          <Parameter name='DecoupledInterpolation' const='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Used decoupled interpolations</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

  </Functions>
</Category>
