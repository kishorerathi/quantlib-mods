<Category name='quotes'>
  <description>quotes objects</description>
  <displayName>Quotes</displayName>
  <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <includes>
    <include>qlo/quotes.hpp</include>
    <include>ql/Utilities/null.hpp</include>
  </includes>
  <copyright>
    Copyright (C) 2006 Francois du Vignaud
    Copyright (C) 2006 Giorgio Facchinetti
  </copyright>
  <Functions>

    <!-- Quote,  SimpleQuote, and HandleQuote -->
    <Member name='qlQuoteValue' handleToLib='Quote'>
      <description>Returns the current value of the given Quote object</description>
      <libraryFunction>value</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlSimpleQuote'>
      <libraryFunction>SimpleQuote</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='value' default='QuantLib::Null&lt;QuantLib::Real&gt;()'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>quote</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Member name='qlSimpleQuoteSetValue' handleToLib='SimpleQuote'>
      <description>Sets the value of the given SimpleQuote object</description>
      <libraryFunction>setValue</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='value'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>the new value</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlHandleQuote'>
      <libraryFunction>Handle&lt;QuantLib::Quote&gt;</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='quote' libraryClass='Quote'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Quote object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Member name='qlHandleQuoteLinkTo' objectClass='Handle&lt;QuantLib::Quote&gt;'>
      <libraryFunction>linkTo</libraryFunction>
      <description>relink handle</description>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='quote' libraryClass='Quote'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Quote object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>void</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlForwardValueQuote'>
      <libraryFunction>ForwardValueQuote</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='index' libraryClass='IborIndex'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>floating IborIndex object ID</description>
          </Parameter>
          <Parameter name='fixingDate' libraryType='QuantLib::Date'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>Fixing Date</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlImpliedStdDevQuote'>
      <libraryFunction>ImpliedStdDevQuote</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='optionType' enumeration='QuantLib::Option::Type'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>option type (i.e. Call or Put)</description>
          </Parameter>
          <Parameter name='atmForwardValue' libToHandle='Quote'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>underlying asset at-the-money forward value</description>
          </Parameter>
          <Parameter name='optionPrice' libToHandle='Quote'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>option price</description>
          </Parameter>
          <Parameter name="strike">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>option strike</description>
          </Parameter>
          <Parameter name="guess" default="QuantLib::Null&lt;QuantLib::Real&gt;()">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>implied volatility guess</description>
          </Parameter>
          <Parameter name="accuracy" default="1e-6">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>iv accuracy</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlEurodollarFuturesImpliedStdDevQuote'>
      <libraryFunction>EurodollarFuturesImpliedStdDevQuote</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='atmForwardValue' libToHandle='Quote'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>underlying asset at-the-money forward value</description>
          </Parameter>
          <Parameter name='callPrice' libToHandle='Quote'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>call option price</description>
          </Parameter>
          <Parameter name='putPrice' libToHandle='Quote'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>put option price</description>
          </Parameter>
          <Parameter name="strike">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>option strike</description>
          </Parameter>
          <Parameter name="guess" default="QuantLib::Null&lt;QuantLib::Real&gt;()">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>implied volatility guess</description>
          </Parameter>
          <Parameter name="accuracy" default="1e-6">
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>standard deviation accuracy</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlFuturesConvAdjustmentQuote'>
      <libraryFunction>FuturesConvAdjustmentQuote</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='index' libraryClass='IborIndex'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>floating IborIndex object ID</description>
          </Parameter>
          <Parameter name='immCode'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>futures IMM code (e.g. H9)</description>
          </Parameter>
          <Parameter name='futuresQuote' libToHandle='Quote'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>futures quote</description>
          </Parameter>
          <Parameter name='volatility' libToHandle='Quote'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>HullWhite volatility</description>
          </Parameter>
          <Parameter name='meanReversion' libToHandle='Quote'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>HullWhite mean reversion</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>
    
    <Member name='qlFuturesConvAdjustmentQuoteImmDate' handleToLib='FuturesConvAdjustmentQuote'>
      <description>Return the IMM date of futures</description>
      <libraryFunction>immDate</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue libraryType='QuantLib::Date'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlFuturesConvAdjustmentQuoteUnderlying' handleToLib='FuturesConvAdjustmentQuote'>
      <description>Return the value of futures underlying</description>
      <libraryFunction>futuresValue</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlFuturesConvAdjustmentQuoteVolatility' handleToLib='FuturesConvAdjustmentQuote'>
      <description>Return the value of HW volatility</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlFuturesConvAdjustmentQuoteMeanReversion' handleToLib='FuturesConvAdjustmentQuote'>
      <description>Return the value of HW mean reversion</description>
      <libraryFunction>meanReversion</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>
    
  </Functions>
</Category>
