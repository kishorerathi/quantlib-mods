<root>
  <RuleGroups>

    <RuleGroup name='functionDeclaration' indent='2' delimiter=',&#10;'>
      <Wrap>&#10;%s</Wrap>
      <Rules>
	<Rule>
          <tensorRanks>
            <tensorRank>scalar</tensorRank>
          </tensorRanks>
          <DataTypes>
            <optional>%(indent)sVaries %(name)s</optional>
            <bool>%(indent)sBoolean %(name)s</bool>
            <string>%(indent)schar *%(name)s</string>
            <any>%(indent)sVaries %(name)s</any>
            <other>%(indent)s%(type)s %(name)s</other>
          </DataTypes>
	</Rule>
	<Rule>
          <tensorRanks>
            <tensorRank>vector</tensorRank>
            <tensorRank>matrix</tensorRank>
          </tensorRanks>
          <DataTypes>
            <other>%(indent)sVaries %(name)s</other>
          </DataTypes>
	</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='functionReturnType'>
      <Wrap>&#10;%s</Wrap>
      <Rules>
	<Rule>
          <tensorRanks>
            <tensorRank>scalar</tensorRank>
          </tensorRanks>
          <DataTypes>
            <void>Boolean *</void>
            <bool>Boolean *</bool>
            <string>char *</string>
            <any>Varies *</any>
            <other>%(type)s *</other>
          </DataTypes>
	</Rule>
	<Rule>
          <tensorRanks>
            <tensorRank>vector</tensorRank>
            <tensorRank>matrix</tensorRank>
          </tensorRanks>
          <DataTypes>
            <other>Varies *</other>
          </DataTypes>
	</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='returnConversion' indent='2'>
      <Wrap codeID='wrap6'/>
      <Rules>
	<Rule>
          <tensorRanks>
            <tensorRank>scalar</tensorRank>
          </tensorRanks>
          <DataTypes>
            <libraryType>%(indent)s*result = returnValue.serialNumber();</libraryType>
            <any>%(indent)sreturn scalarToVaries(result, returnValue);</any>
            <string>%(indent)sstrcpy(result, returnValue.c_str());</string>
            <bool>%(indent)s*result = returnValue ? TRUE : FALSE;</bool>
            <void>%(indent)s*result = TRUE;</void>
            <other>%(indent)s*result = returnValue;</other>
          </DataTypes>
	</Rule>
	<Rule>
          <tensorRanks>
            <tensorRank>vector</tensorRank>
            <tensorRank>matrix</tensorRank>
          </tensorRanks>
          <DataTypes>
            <other>%(indent)sreturn %(tensorRank)sToVaries(result, returnValue);</other>
          </DataTypes>
	</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='libraryConversions' indent='2' checkParameterIgnore='true' delimiter='&#10;'>
      <Wrap codeID='wrap2'/>
      <Rules>
	<Rule>
          <tensorRanks>
            <tensorRank>scalar</tensorRank>
          </tensorRanks>
          <DataTypes>
            <libraryType codeID='code66'/>
          </DataTypes>
	</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='libraryReturnType' delimiter='&#10;'>
      <Wrap>&#10;%s</Wrap>
      <Rules>
	<Rule>
          <tensorRanks>
            <tensorRank>scalar</tensorRank>
          </tensorRanks>
          <DataTypes>
            <libraryType>%(libraryType)s returnValue = </libraryType>
            <void/>
            <string>std::string returnValue = </string>
            <any>boost::any returnValue = </any>
            <other>%(type)s returnValue = </other>
          </DataTypes>
	</Rule>
	<Rule>
          <tensorRanks>
            <tensorRank>vector</tensorRank>
          </tensorRanks>
          <DataTypes>
            <string>std::vector&lt;std::string&gt; returnValue = </string>
            <any>std::vector&lt;boost::any&gt; returnValue = </any>
            <other>std::vector&lt;%(type)s&gt; returnValue = </other>
          </DataTypes>
	</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='libraryCall' checkParameterIgnore='true' checkSkipFirst='true' indent='3' delimiter=',&#10;'>
      <Wrap>&#10;%s</Wrap>
      <Rules>
	<Rule>
          <tensorRanks>
            <tensorRank>scalar</tensorRank>
          </tensorRanks>
          <DataTypes>
            <libraryType>%(indent)s%(name)sLib</libraryType>
            <libraryClass>%(indent)s%(name)sLibObj</libraryClass>
            <enumeration>%(indent)s%(name)sEnum</enumeration>
            <other>%(indent)s%(name)s</other>
          </DataTypes>
	</Rule>
	<Rule>
          <tensorRanks>
            <tensorRank>vector</tensorRank>
            <tensorRank>matrix</tensorRank>
          </tensorRanks>
          <DataTypes>
            <other>%(indent)s%(name)s</other>
          </DataTypes>
	</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='referenceConversions' indent='2' delimiter='&#10;'>
      <Wrap codeID='wrap5'/>
      <Rules>
	<Rule>
          <tensorRanks>
            <tensorRank>scalar</tensorRank>
          </tensorRanks>
          <DataTypes>
            <libraryClass codeID='code67'/>
          </DataTypes>
	</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='enumConversions' indent='2' checkParameterIgnore='true' delimiter='&#10;'>
      <Wrap codeID='wrap3'/>
      <Rules>
	<Rule>
          <tensorRanks>
            <tensorRank>scalar</tensorRank>
          </tensorRanks>
          <DataTypes>
            <enumeration codeID='code68'/>
          </DataTypes>
	</Rule>
      </Rules>
    </RuleGroup>

  </RuleGroups>

</root>
