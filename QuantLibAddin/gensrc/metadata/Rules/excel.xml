
<root>

  <RuleGroups>

    <RuleGroup name='functionDeclaration' indent='2' delimiter=',&#10;'>
      <Wrap>&#10;%s</Wrap>
      <Rules>
        <Rule default='true'>%(indent)sOPER *%(name)s</Rule>
        <Rule loop='true'>%(indent)sOPER *%(name)s</Rule>
        <Rule type='QuantLib::Date'>%(indent)sOPER *%(name)s</Rule>
        <Rule superType='libraryClass' type='QuantLib::Quote'>%(indent)sOPER *%(name)s</Rule>
        <Rule superType='libToHandle' type='QuantLib::Quote'>%(indent)sOPER *%(name)s</Rule>
        <Rule tensorRank='scalar' nativeType='any'>%(indent)sOPER *%(name)s</Rule>
        <Rule tensorRank='scalar' nativeType='reference'>%(indent)sXLOPER *%(name)s</Rule>
        <Rule tensorRank='scalar' nativeType='string'>%(indent)schar *%(name)s</Rule>
        <Rule tensorRank='scalar'>%(indent)s%(nativeType)s *%(name)s</Rule>
        <Rule tensorRank='vector'>%(indent)sOPER *%(name)s</Rule>
        <Rule tensorRank='matrix' nativeType='long'>%(indent)sFP *%(name)s</Rule>
        <Rule tensorRank='matrix' nativeType='double'>%(indent)sFP *%(name)s</Rule>
        <Rule tensorRank='matrix'>%(indent)sOPER *%(name)s</Rule>
        <Rule>%(indent)sOPER *%(name)s</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='functionReturnType'>
      <Wrap>&#10;%s</Wrap>
      <Rules>
        <Rule default='true'>OPER *</Rule>
        <Rule tensorRank='scalar' nativeType='bool'>short int *</Rule>
        <Rule tensorRank='scalar' nativeType='string'>char *</Rule>
        <Rule tensorRank='scalar' nativeType='any'>OPER *</Rule>
        <Rule tensorRank='scalar' nativeType='void'>bool *</Rule>
        <Rule tensorRank='scalar'>%(nativeType)s *</Rule>
        <Rule>OPER *</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='xlRegisterParam'>
      <Wrap/>
      <Rules>
        <Rule default='true'>P</Rule>
        <Rule loop='true'>P</Rule>
        <Rule type='QuantLib::Date'>P</Rule>
        <Rule superType='libraryClass' type='QuantLib::Quote'>P</Rule>
        <Rule superType='libToHandle' type='QuantLib::Quote'>P</Rule>
        <Rule tensorRank='scalar' nativeType='long'>N</Rule>
        <Rule tensorRank='scalar' nativeType='string'>C</Rule>
        <Rule tensorRank='scalar' nativeType='double'>E</Rule>
        <Rule tensorRank='scalar' nativeType='bool'>L</Rule>
        <Rule tensorRank='scalar' nativeType='any'>P</Rule>
        <Rule tensorRank='scalar' nativeType='reference'>R</Rule>
        <Rule tensorRank='matrix' nativeType='long'>K</Rule>
        <Rule tensorRank='matrix' nativeType='double'>K</Rule>
        <Rule>P</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='xlRegisterReturn'>
      <Wrap>&#10;%s</Wrap>
      <Rules>
        <Rule tensorRank='scalar' nativeType='long'>N</Rule>
        <Rule tensorRank='scalar' nativeType='string'>C</Rule>
        <Rule tensorRank='scalar' nativeType='double'>E</Rule>
        <Rule tensorRank='scalar' nativeType='bool'>L</Rule>
        <Rule tensorRank='scalar' nativeType='void'>L</Rule>
        <Rule>P</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='parameterList' delimiter=','>
      <Wrap/>
      <Rules>
        <Rule>%(name)s</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='registerParameters' indent='3' delimiter=',&#10;' padLastParamDesc='true'>
      <Wrap>&#10;            // parameter descriptions&#10;%s</Wrap>
      <Rules>
        <Rule>%(indent)sTempStrNoSize("\x%(descLen)02X""%(description)s")</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='cppConversions' indent='2' checkParameterIgnore='false' delimiter='&#10;'>
      <Wrap codeID='wrap1'/>
      <Rules>
        <Rule loop='true'/>
        <Rule tensorRank='scalar' type='QuantLib::Date' codeID='code12b'/>
        <Rule tensorRank='scalar' superType='objectHandle' type='QuantLib::Quote'/>
        <Rule tensorRank='scalar' superType='handleToLib' type='QuantLib::Quote'/>
        <Rule tensorRank='scalar' superType='libraryClass' type='QuantLib::Quote' default='true' codeID='code11'/>
        <Rule tensorRank='scalar' type='QuantLib::Quote' codeID='code12b'/>
        <Rule tensorRank='scalar' default='true' nativeType='string' codeID='code11'/>
        <Rule tensorRank='scalar' default='true' codeID='code12'/>
        <Rule tensorRank='scalar'/>
        <Rule tensorRank='vector' superType='libraryClass' type='QuantLib::Index' codeID='code15'/>
        <Rule tensorRank='vector' superType='libraryClass' type='QuantLib::Xibor' codeID='code15'/>
        <Rule tensorRank='vector' superType='libraryClass' type='QuantLib::SwapIndex' codeID='code15'/>
        <Rule tensorRank='vector' superType='libraryClass' type='QuantLib::InterestRateIndex' codeID='code15'/>
        <Rule tensorRank='vector' superType='libraryClass' type='QuantLib::IborIndex' codeID='code15'/>
        <Rule tensorRank='vector' superType='libraryClass' codeID='code14'/>
        <Rule tensorRank='vector' type='QuantLib::Date' codeID='code14'/>
        <Rule tensorRank='vector' type='QuantLib::Period' codeID='code14'/>
        <Rule tensorRank='vector' type='QuantLib::Quote' codeID='code14'/>
        <Rule tensorRank='vector' type='QuantLib::Size' codeID='code14'/>
        <Rule tensorRank='vector' nativeType='long' codeID='code13'/>
        <Rule tensorRank='vector' nativeType='double' codeID='code13'/>
        <Rule tensorRank='vector' nativeType='string' codeID='code15'/>
        <Rule tensorRank='vector' nativeType='any' codeID='code14'/>
        <Rule tensorRank='vector' codeID='code13'/>
        <Rule tensorRank='matrix' type='QuantLib::Quote' codeID='code21b'/>
        <Rule tensorRank='matrix' default='true' codeID='code18'/>
        <Rule tensorRank='matrix' nativeType='long' codeID='code19'/>
        <Rule tensorRank='matrix' nativeType='double' codeID='code20'/>
        <Rule tensorRank='matrix' nativeType='string' codeID='code21a'/>
        <Rule tensorRank='matrix' nativeType='any' codeID='code21b'/>
        <Rule tensorRank='matrix' codeID='code18'/>
      </Rules>
    </RuleGroup>

    <RuleGroup name='libraryConversions' indent='2' checkParameterIgnore='true' delimiter='&#10;' prefix='&#10;'>
      <Wrap codeID='wrap2'/>
      <Rules>
        <Rule tensorRank='scalar' superType='libraryType' type='QuantLib::Date' default='false' codeID='code24'/>
        <Rule tensorRank='scalar' superType='libraryType' nativeType='string' default='true' codeID='code25'/>
        <Rule tensorRank='scalar' superType='libraryType' nativeType='string' default='false' codeID='code22'/>
        <Rule tensorRank='scalar' superType='libraryType' default='true' codeID='code26'/>
        <Rule tensorRank='scalar' superType='libraryType' default='false' codeID='code23'/>
        <Rule tensorRank='vector' superType='libraryType' type='QuantLib::Array' codeID='code28'/>
        <Rule tensorRank='vector' superType='libraryType' type='QuantLib::Date' codeID='code30'/>
        <Rule tensorRank='vector' superType='libraryType' codeID='code31'/>
        <Rule tensorRank='matrix' superType='libraryType' type='QuantLib::Matrix' codeID='code29'/>
      </Rules>
    </RuleGroup>

    <RuleGroup name='enumConversions' indent='2' checkParameterIgnore='true' delimiter='&#10;'>
      <Wrap codeID='wrap3'/>
      <Rules>
        <Rule tensorRank='scalar' superType='enumeration' default='true' codeID='code33'/>
        <Rule tensorRank='scalar' superType='enumeration' default='false' codeID='code34'/>
        <Rule tensorRank='vector' superType='enumeration' codeID='code35'/>
      </Rules>
    </RuleGroup>

    <RuleGroup name='objectConversions' indent='2' delimiter='&#10;'>
      <Wrap codeID='wrap4'/>
      <Rules>
        <Rule tensorRank='scalar' superType='objectClass' codeID='code36a'/>
        <Rule tensorRank='scalar' superType='objectHandle' codeID='code36b'/>
        <Rule tensorRank='vector' superType='objectClass' codeID='code37'/>
      </Rules>
    </RuleGroup>

    <RuleGroup name='referenceConversions' indent='2' delimiter='&#10;'>
      <Wrap codeID='wrap5'/>
      <Rules>
        <Rule tensorRank='scalar' superType='libraryClass' default='true' codeID='code39'/>
        <Rule tensorRank='scalar' superType='libraryClass' type='QuantLib::Index' codeID='code40'/>
        <Rule tensorRank='scalar' superType='libraryClass' type='QuantLib::Xibor' codeID='code40'/>
        <Rule tensorRank='scalar' superType='libraryClass' type='QuantLib::SwapIndex' codeID='code40'/>
        <Rule tensorRank='scalar' superType='libraryClass' type='QuantLib::InterestRateIndex' codeID='code40'/>
        <Rule tensorRank='scalar' superType='libraryClass' type='QuantLib::IborIndex' codeID='code40'/>
        <Rule tensorRank='scalar' superType='libraryClass' type='QuantLib::Quote' codeID='code47'/>
        <Rule tensorRank='scalar' superType='libraryClass' codeID='code38'/>
        <Rule tensorRank='scalar' superType='libToHandle' type='QuantLib::Quote' codeID='code45a'/>
        <Rule tensorRank='scalar' superType='libToHandle' codeID='code44'/>
        <Rule tensorRank='scalar' superType='handleToLib' type='QuantLib::TermStructure' codeID='code46'/>
        <Rule tensorRank='scalar' superType='handleToLib' type='QuantLib::SwaptionVolatilityDiscrete' codeID='code46b'/>
        <Rule tensorRank='scalar' superType='handleToLib' type='QuantLib::SwaptionVolatilityCube' codeID='code46b'/>
        <Rule tensorRank='scalar' superType='handleToLib' codeID='code45b'/>
        <Rule tensorRank='scalar' superType='underlyingClass' type='QuantLib::SequenceStatistics' codeID='code49'/>
        <Rule tensorRank='scalar' superType='underlyingClass' codeID='code48'/>
        <Rule tensorRank='vector' superType='libraryClass' type='QuantLib::Index' codeID='code41'/>
        <Rule tensorRank='vector' superType='libraryClass' type='QuantLib::Xibor' codeID='code41'/>
        <Rule tensorRank='vector' superType='libraryClass' type='QuantLib::SwapIndex' codeID='code41'/>
        <Rule tensorRank='vector' superType='libraryClass' type='QuantLib::InterestRateIndex' codeID='code41'/>
        <Rule tensorRank='vector' superType='libraryClass' type='QuantLib::IborIndex' codeID='code41'/>
        <Rule tensorRank='vector' superType='libraryClass' codeID='code42'/>
        <Rule tensorRank='vector' superType='libToHandle' type='QuantLib::Quote' codeID='code43'/>
        <Rule tensorRank='vector' superType='libToHandle' codeID='code42'/>
        <Rule tensorRank='matrix' superType='libToHandle' type='QuantLib::Quote' codeID='code50'/>
      </Rules>
    </RuleGroup>

    <RuleGroup name='libraryReturnType'>
      <Wrap>&#10;%s</Wrap>
      <Rules>
        <Rule tensorRank='scalar' superType='enumeration'>%(type)s returnValue = </Rule>
        <Rule tensorRank='scalar' superType='libraryType'>%(type)s returnValue = </Rule>
        <Rule tensorRank='scalar' nativeType='bool'>static short int returnValue;&#10;        returnValue = </Rule>
        <Rule tensorRank='scalar' nativeType='long'>static long returnValue;&#10;        returnValue = </Rule>
        <Rule tensorRank='scalar' nativeType='double'>static double returnValue;&#10;        returnValue = </Rule>
        <Rule tensorRank='scalar' nativeType='string'>std::string returnValue = </Rule>
        <Rule tensorRank='scalar' nativeType='void'>static bool returnValue = true;&#10;        </Rule>
        <Rule tensorRank='scalar' nativeType='any'>boost::any returnValue = </Rule>
        <Rule tensorRank='vector' superType='libraryType' type='QuantLib::Array'>%(type)s returnValue = </Rule>
        <Rule tensorRank='vector' superType='libraryType'>std::vector&lt;%(type)s&gt; returnValue = </Rule>
        <Rule tensorRank='vector' nativeType='string'>std::vector&lt;std::string&gt; returnValue = </Rule>
        <Rule tensorRank='vector' nativeType='any'>std::vector&lt;boost::any&gt; returnValue = </Rule>
        <Rule tensorRank='vector'>std::vector&lt;%(nativeType)s&gt; returnValue = </Rule>
        <Rule tensorRank='matrix' superType='libraryType' type='QuantLib::Matrix'>%(type)s returnValue = </Rule>
        <Rule tensorRank='matrix' superType='libraryType' codeID='code52'/>
        <Rule tensorRank='matrix' nativeType='string' codeID='code51'/>
        <Rule tensorRank='matrix' nativeType='any' codeID='code53'/>
        <Rule tensorRank='matrix' codeID='code52'/>
      </Rules>
    </RuleGroup>

    <RuleGroup name='libraryCall' checkParameterIgnore='true' checkSkipFirst='true' indent='4' delimiter=',&#10;'>
      <Wrap>&#10;%s</Wrap>
      <Rules>
        <Rule tensorRank='scalar' superType='libraryType'>%(indent)s%(name)sLib</Rule>
        <Rule tensorRank='scalar' superType='libraryClass'>%(indent)s%(name)sLibObj</Rule>
        <Rule tensorRank='scalar' superType='libToHandle'>%(indent)s%(name)sLibObj</Rule>
        <Rule tensorRank='scalar' superType='handleToLib'>%(indent)s%(name)sLibObj</Rule>
        <Rule tensorRank='scalar' superType='underlyingClass'>%(indent)s%(name)sLibObj</Rule>
        <Rule tensorRank='scalar' superType='objectClass'>%(indent)s%(name)sObj</Rule>
        <Rule tensorRank='scalar' superType='enumeration'>%(indent)s%(name)sEnum</Rule>
        <Rule tensorRank='scalar' default='true'>%(indent)s%(name)sCpp</Rule>
        <Rule tensorRank='scalar' nativeType='long'>%(indent)s*%(name)s</Rule>
        <Rule tensorRank='scalar' nativeType='double'>%(indent)s*%(name)s</Rule>
        <Rule tensorRank='scalar' nativeType='bool'>%(indent)s*%(name)s</Rule>
        <Rule tensorRank='scalar' nativeType='any'>%(indent)s%(name)sCpp</Rule>
        <Rule tensorRank='scalar'>%(indent)s%(name)s</Rule>
        <Rule superType='libraryType' vectorIterator='begin'>%(indent)s%(name)sLib.begin()</Rule>
        <Rule superType='libraryType' vectorIterator='end'>%(indent)s%(name)sLib.end()</Rule>
        <Rule superType='libraryType' vectorIterator='beginAndEnd' codeID='code54'/>
        <Rule superType='libraryType'>%(indent)s%(name)sLib</Rule>
        <Rule superType='libToHandle'>%(indent)s%(name)sLibObj</Rule>
        <Rule superType='libraryClass'>%(indent)s%(name)sLibObj</Rule>
        <Rule superType='objectClass'>%(indent)s%(name)sObj</Rule>
        <Rule superType='enumeration'>%(indent)s%(name)sEnum</Rule>
        <Rule vectorIterator='begin'>%(indent)s%(name)sCpp.begin()</Rule>
        <Rule vectorIterator='end'>%(indent)s%(name)sCpp.end()</Rule>
        <Rule vectorIterator='beginAndEnd' codeID='code55'/>
        <Rule>%(indent)s%(name)sCpp</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='voCall' checkParameterIgnore='true' indent='4' delimiter=',&#10;'>
      <Wrap>&#10;%s</Wrap>
      <Rules>
        <Rule tensorRank='scalar' default='true'>%(indent)s%(name)sCpp</Rule>
        <Rule tensorRank='scalar' type='QuantLib::Date'>%(indent)s%(name)sCpp</Rule>
        <Rule tensorRank='scalar' type='QuantLib::Period'>%(indent)s%(name)s</Rule>
        <Rule tensorRank='scalar' superType='libToHandle' type='QuantLib::Quote'>%(indent)s%(name)sCpp</Rule>
        <Rule tensorRank='scalar' superType='libraryClass' type='QuantLib::Quote' default='true'>%(indent)s%(name)sCpp</Rule>
        <Rule tensorRank='scalar' nativeType='string'>%(indent)s%(name)s</Rule>
        <Rule tensorRank='scalar'>%(indent)s*%(name)s</Rule>
        <Rule>%(indent)s%(name)sCpp</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='returnConversion' indent='2'>
      <Wrap codeID='wrap6'/>
      <Rules>
        <Rule loop='true' codeID='code60'/>
        <Rule tensorRank='scalar' superType='libraryType' nativeType='string' codeID='code56a'/>
        <Rule tensorRank='scalar' superType='libraryType' codeID='code56b'/>
        <Rule tensorRank='scalar' superType='enumeration' codeID='code57'/>
        <Rule tensorRank='scalar' nativeType='string' codeID='code58'/>
        <Rule tensorRank='scalar' nativeType='any' codeID='code59'/>
        <Rule tensorRank='scalar' codeID='code60'/>
        <Rule tensorRank='vector' superType='libraryType' type='QuantLib::Array' codeID='code61'/>
        <Rule tensorRank='vector' superType='libraryType' type='QuantLib::Matrix' codeID='code61'/>
        <Rule tensorRank='vector' superType='libraryType' nativeType='string' codeID='code63'/>
        <Rule tensorRank='vector' superType='libraryType' codeID='code62'/>
        <Rule tensorRank='vector' codeID='code64'/>
        <Rule tensorRank='matrix' codeID='code65'/>
      </Rules>
    </RuleGroup>

    <RuleGroup name='loopInputs' indent='4' delimiter=',&#10;' checkParameterIgnore='true' checkSkipFirst='true'>
      <Wrap>&#10;%s</Wrap>
      <Rules>
        <Rule tensorRank='scalar' superType='libraryType'>%(indent)s%(name)sLib</Rule>
        <Rule tensorRank='scalar' superType='enumeration'>%(indent)s%(name)sEnum</Rule>
        <Rule tensorRank='scalar' default='true'>%(indent)s%(name)sCpp</Rule>
        <Rule tensorRank='scalar' nativeType='bool'>%(indent)s*%(name)s</Rule>
        <Rule tensorRank='scalar' nativeType='double'>%(indent)s*%(name)s</Rule>
        <Rule tensorRank='scalar' nativeType='string'>%(indent)sstd::string(%(name)s)</Rule>
        <Rule tensorRank='vector' loop='true'>%(indent)s_1</Rule>
        <Rule>%(indent)s%(name)s</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='loopReturnType'>
      <Wrap/>
      <Rules>
        <Rule superType='libraryType'>%(type)s</Rule>
        <Rule superType='enumeration'>%(type)s</Rule>
        <Rule nativeType='string'>std::string</Rule>
        <Rule nativeType='any'>boost::any</Rule>
        <Rule>%(nativeType)s</Rule>
      </Rules>
    </RuleGroup>

    <RuleGroup name='loopDatatype' delimiter='&#10;'>
      <Wrap>&#10;%s</Wrap>
      <Rules>
        <Rule>%(type)s</Rule>
      </Rules>
    </RuleGroup>

  </RuleGroups>

</root>

