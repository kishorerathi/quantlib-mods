<Category name='payoffs'>
    <description>functions to construct and use StrikedTypePayoff and DoubleStickyRatchetPayoff objects</description>
    <displayName>Payoffs</displayName>
    <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <includes>
    <include>qlo/stickyratchet.hpp</include>
  </includes>
    <copyright>
        Copyright (C) 2006 Ferdinando Ametrano
        Copyright (C) 2007 Marco Bianchetti
        Copyright (C) 2006 Eric Ehlers
    </copyright>

    <Functions>

        <Member name='qlPayoffName' libraryClass='Payoff'>
            <description>returns the type (e.g. Vanilla, CashOrNothing, etc.) for the given Payoff object.</description>
            <libraryFunction>name</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
            </SupportedPlatforms>
            <ParameterList>
                <Parameters />
            </ParameterList>
            <ReturnValue>
                <type>string</type>
                <tensorRank>scalar</tensorRank>
            </ReturnValue>
        </Member>

        <Member name='qlPayoffDescription' libraryClass='Payoff'>
            <description>returns the description (e.g. CashOrNothing, strike 32.2, cash payoff 2.5) for the given Payoff object.</description>
            <libraryFunction>description</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
            </SupportedPlatforms>
            <ParameterList>
                <Parameters />
            </ParameterList>
            <ReturnValue>
                <type>string</type>
                <tensorRank>scalar</tensorRank>
            </ReturnValue>
        </Member>

        <Member name='qlPayoffValue' libraryClass='Payoff'>
            <description>returns the payoff value given an underlying reference level for the given Payoff object.</description>
            <libraryFunction>operator()</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
            </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='underlying' libraryType='QuantLib::Real' exampleValue ='0.01'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>underlying reference level</description>
                    </Parameter>
                </Parameters>
            </ParameterList>
            <ReturnValue>
                <type>double</type>
                <tensorRank>scalar</tensorRank>
            </ReturnValue>
        </Member>

        <Member name='qlPayoffOptionType' libraryClass='TypePayoff'>
            <description>returns the option-type (e.g. Call, Put) for the given Payoff object.</description>
            <libraryFunction>optionType</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
            </SupportedPlatforms>
            <ParameterList>
                <Parameters />
            </ParameterList>
            <ReturnValue enumeration='QuantLib::Option::Type'>
                <type>string</type>
                <tensorRank>scalar</tensorRank>
            </ReturnValue>
        </Member>

        <Member name='qlPayoffStrike' libraryClass='StrikedTypePayoff'>
            <description>returns the strike for the given Payoff object.</description>
            <libraryFunction>strike</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
            </SupportedPlatforms>
            <ParameterList>
                <Parameters />
            </ParameterList>
            <ReturnValue libraryType='QuantLib::Real'>
                <type>double</type>
                <tensorRank>scalar</tensorRank>
            </ReturnValue>
        </Member>

        <!--<Member name='qlPayoffCashPayoff' libraryClass='CashOrNothingPayoff'>
      <description>returns the cash payoff of the given CashOrNothingPayoff object.</description>
      <libraryFunction>cashPayoff</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters />
      </ParameterList>
      <ReturnValue libraryType='QuantLib::Real'>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlPayoffStrikePayoff' libraryClass='GapPayoff'>
      <description>returns the strike payoff of the given GapPayoff object.</description>
      <libraryFunction>strikePayoff</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters />
      </ParameterList>
      <ReturnValue libraryType='QuantLib::Real'>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlPayoffStrikeIncrement' libraryClass='SuperSharePayoff'>
      <description>returns the strike increment of the given SuperSharePayoff object.</description>
      <libraryFunction>strikeIncrement</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters />
      </ParameterList>
      <ReturnValue libraryType='QuantLib::Real'>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>-->

        <Member name='qlPayoffThirdParameter' objectClass='StrikedTypePayoff'>
            <description>returns the third parameter of a StrikedType payoff.</description>
            <libraryFunction>thirdParameter</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
            </SupportedPlatforms>
            <ParameterList>
                <Parameters />
            </ParameterList>
            <ReturnValue libraryType='QuantLib::Real'>
                <type>double</type>
                <tensorRank>scalar</tensorRank>
            </ReturnValue>
        </Member>

        <Constructor name='qlStrikedTypePayoff'>
            <libraryFunction>StrikedTypePayoff</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
                <C/>
                <Calc/>
                <Guile/>
            </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='payoffID'>
                        <type>string</type>
                        <tensorRank>scalar</tensorRank>
                        <description>payoff ID (e.g. Vanilla, PercentageStrike, AssetOrNothing, CashOrNothing, Gap, SuperShare).</description>
                    </Parameter>
                    <Parameter name='optionType' enumeration='QuantLib::Option::Type' exampleValue ='Call'>
                        <type>string</type>
                        <tensorRank>scalar</tensorRank>
                        <description>option type</description>
                    </Parameter>
                    <Parameter name='strike' libraryType='QuantLib::Real' exampleValue ='0.01'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>strike</description>
                    </Parameter>
                    <Parameter name='thirdParameter' default='QuantLib::Null&lt;QuantLib::Real&gt;()'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>the 3rd paramenter for the payoff definition of CashOrNothing (cash), Gap (determines the size of the payoff), SuperFund (second strike).</description>
                    </Parameter>
                </Parameters>
            </ParameterList>
        </Constructor>

    <!-- DoubleStickyRatchet payoffs interface -->
        <Constructor name='qlDoubleStickyRatchetPayoff'>
            <libraryFunction>DoubleStickyRatchetPayoff</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
                <C/>
                <Calc/>
                <Guile/>
            </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='type1' libraryType='QuantLib::Real' exampleValue ='-1.0'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description> Sticky (type1=1) or Ratchet (type1=-1) payoff </description>
                    </Parameter>
                    <Parameter name='type2' libraryType='QuantLib::Real' exampleValue ='-1.0'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description> Strike type (type2=1 for Min, type2=-1 for Max, type2=0 for single sticky/ratchet) </description>
                    </Parameter>
                    <Parameter name='gearing1' libraryType='QuantLib::Real' exampleValue ='1.0'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='gearing2' libraryType='QuantLib::Real' exampleValue ='1.1'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='gearing3' libraryType='QuantLib::Real' exampleValue ='1.2'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 3 (for forward rate 3)</description>
                    </Parameter>
                    <Parameter name='spread1' libraryType='QuantLib::Real' exampleValue ='0.001'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='spread2' libraryType='QuantLib::Real' exampleValue ='0.002'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='spread3' libraryType='QuantLib::Real' exampleValue ='0.003'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 3 (for forward rate 3)</description>
                    </Parameter>
                    <Parameter name='initialValue1' libraryType='QuantLib::Real' exampleValue ='0.02'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>initial value for strike 1 (forward rate or coupon/accrualFactor)</description>
                    </Parameter>
                    <Parameter name='initialValue2' libraryType='QuantLib::Real' exampleValue ='0.03'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>initial value for strike 2 (forward rate or coupon/accrualFactor)</description>
                    </Parameter>
                    <Parameter name='accrualFactor' libraryType='QuantLib::Real' exampleValue ='0.5'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>accrual factor</description>
                    </Parameter>
                </Parameters>
            </ParameterList>
        </Constructor>

        <Constructor name='qlRatchetPayoff'>
            <libraryFunction>RatchetPayoff</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
                <C/>
                <Calc/>
                <Guile/>
            </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='gearing1' libraryType='QuantLib::Real' exampleValue ='1.0'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='gearing2' libraryType='QuantLib::Real' exampleValue ='1.1'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='spread1' libraryType='QuantLib::Real' exampleValue ='0.001'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='spread2' libraryType='QuantLib::Real' exampleValue ='0.002'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='initialValue' libraryType='QuantLib::Real' exampleValue ='0.02'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>initial value for strike (forward rate or coupon/accrualFactor)</description>
                    </Parameter>
                    <Parameter name='accrualFactor' libraryType='QuantLib::Real' exampleValue ='0.5'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>accrual factor</description>
                    </Parameter>
                </Parameters>
            </ParameterList>
        </Constructor>

        <Constructor name='qlStickyPayoff'>
            <libraryFunction>StickyPayoff</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
                <C/>
                <Calc/>
                <Guile/>
            </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='gearing1' libraryType='QuantLib::Real' exampleValue ='1.0'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='gearing2' libraryType='QuantLib::Real' exampleValue ='1.1'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='spread1' libraryType='QuantLib::Real' exampleValue ='0.001'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='spread2' libraryType='QuantLib::Real' exampleValue ='0.002'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='initialValue' libraryType='QuantLib::Real' exampleValue ='0.02'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>initial value for strike (forward rate or coupon/accrualFactor)</description>
                    </Parameter>
                    <Parameter name='accrualFactor' libraryType='QuantLib::Real' exampleValue ='0.5'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>accrual factor</description>
                    </Parameter>
                </Parameters>
            </ParameterList>
        </Constructor>

        <Constructor name='qlRatchetMaxPayoff'>
            <libraryFunction>RatchetMaxPayoff</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
                <C/>
                <Calc/>
                <Guile/>
            </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='gearing1' libraryType='QuantLib::Real' exampleValue ='1.0'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='gearing2' libraryType='QuantLib::Real' exampleValue ='1.1'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='gearing3' libraryType='QuantLib::Real' exampleValue ='1.2'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 3 (for forward rate 3)</description>
                    </Parameter>
                    <Parameter name='spread1' libraryType='QuantLib::Real' exampleValue ='0.001'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='spread2' libraryType='QuantLib::Real' exampleValue ='0.002'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='spread3' libraryType='QuantLib::Real' exampleValue ='0.003'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 3 (for forward rate 3)</description>
                    </Parameter>
                    <Parameter name='initialValue1' libraryType='QuantLib::Real' exampleValue ='0.02'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>initial value for strike 1 (forward rate or coupon/accrualFactor)</description>
                    </Parameter>
                    <Parameter name='initialValue2' libraryType='QuantLib::Real' exampleValue ='0.03'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>initial value for strike 2 (forward rate or coupon/accrualFactor)</description>
                    </Parameter>
                    <Parameter name='accrualFactor' libraryType='QuantLib::Real' exampleValue ='0.5'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>accrual factor</description>
                    </Parameter>
                </Parameters>
            </ParameterList>
        </Constructor>

        <Constructor name='qlRatchetMinPayoff'>
            <libraryFunction>RatchetMinPayoff</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
                <C/>
                <Calc/>
                <Guile/>
            </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='gearing1' libraryType='QuantLib::Real' exampleValue ='1.0'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='gearing2' libraryType='QuantLib::Real' exampleValue ='1.1'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='gearing3' libraryType='QuantLib::Real' exampleValue ='1.2'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 3 (for forward rate 3)</description>
                    </Parameter>
                    <Parameter name='spread1' libraryType='QuantLib::Real' exampleValue ='0.001'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='spread2' libraryType='QuantLib::Real' exampleValue ='0.002'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='spread3' libraryType='QuantLib::Real' exampleValue ='0.003'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 3 (for forward rate 3)</description>
                    </Parameter>
                    <Parameter name='initialValue1' libraryType='QuantLib::Real' exampleValue ='0.02'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>initial value for strike 1 (forward rate or coupon/accrualFactor)</description>
                    </Parameter>
                    <Parameter name='initialValue2' libraryType='QuantLib::Real' exampleValue ='0.03'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>initial value for strike 2 (forward rate or coupon/accrualFactor)</description>
                    </Parameter>
                    <Parameter name='accrualFactor' libraryType='QuantLib::Real' exampleValue ='0.5'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>accrual factor</description>
                    </Parameter>
                </Parameters>
            </ParameterList>
        </Constructor>

        <Constructor name='qlStickyMaxPayoff'>
            <libraryFunction>StickyMaxPayoff</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
                <C/>
                <Calc/>
                <Guile/>
            </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='gearing1' libraryType='QuantLib::Real' exampleValue ='1.0'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='gearing2' libraryType='QuantLib::Real' exampleValue ='1.1'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='gearing3' libraryType='QuantLib::Real' exampleValue ='1.2'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 3 (for forward rate 3)</description>
                    </Parameter>
                    <Parameter name='spread1' libraryType='QuantLib::Real' exampleValue ='0.001'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='spread2' libraryType='QuantLib::Real' exampleValue ='0.002'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='spread3' libraryType='QuantLib::Real' exampleValue ='0.003'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 3 (for forward rate 3)</description>
                    </Parameter>
                    <Parameter name='initialValue1' libraryType='QuantLib::Real' exampleValue ='0.02'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>initial value for strike 1 (forward rate or coupon/accrualFactor)</description>
                    </Parameter>
                    <Parameter name='initialValue2' libraryType='QuantLib::Real' exampleValue ='0.03'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>initial value for strike 2 (forward rate or coupon/accrualFactor)</description>
                    </Parameter>
                    <Parameter name='accrualFactor' libraryType='QuantLib::Real' exampleValue ='0.5'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>accrual factor</description>
                    </Parameter>
                </Parameters>
            </ParameterList>
        </Constructor>

        <Constructor name='qlStickyMinPayoff'>
            <libraryFunction>StickyMinPayoff</libraryFunction>
            <SupportedPlatforms>
                <Excel calcInWizard='false' />
                <C/>
                <Calc/>
                <Guile/>
            </SupportedPlatforms>
            <ParameterList>
                <Parameters>
                    <Parameter name='gearing1' libraryType='QuantLib::Real' exampleValue ='1.0'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='gearing2' libraryType='QuantLib::Real' exampleValue ='1.1'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='gearing3' libraryType='QuantLib::Real' exampleValue ='1.2'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>gearing 3 (for forward rate 3)</description>
                    </Parameter>
                    <Parameter name='spread1' libraryType='QuantLib::Real' exampleValue ='0.001'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 1 (for strike 1)</description>
                    </Parameter>
                    <Parameter name='spread2' libraryType='QuantLib::Real' exampleValue ='0.002'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 2 (for strike 2)</description>
                    </Parameter>
                    <Parameter name='spread3' libraryType='QuantLib::Real' exampleValue ='0.003'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>spread 3 (for forward rate 3)</description>
                    </Parameter>
                    <Parameter name='initialValue1' libraryType='QuantLib::Real' exampleValue ='0.02'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>initial value for strike 1 (forward rate or coupon/accrualFactor)</description>
                    </Parameter>
                    <Parameter name='initialValue2' libraryType='QuantLib::Real' exampleValue ='0.03'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>initial value for strike 2 (forward rate or coupon/accrualFactor)</description>
                    </Parameter>
                    <Parameter name='accrualFactor' libraryType='QuantLib::Real' exampleValue ='0.5'>
                        <type>double</type>
                        <tensorRank>scalar</tensorRank>
                        <description>accrual factor</description>
                    </Parameter>
                </Parameters>
            </ParameterList>
        </Constructor>

    </Functions>
</Category>
