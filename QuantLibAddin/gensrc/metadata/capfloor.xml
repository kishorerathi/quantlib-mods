<Category name='capfloor'>
  <description>functions to construct and use CapFloor objects</description>
  <displayName>Caps/Floors</displayName>
  <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <includes>
    <include>qlo/capfloor.hpp</include>
    <include>qlo/termstructures.hpp</include>
    <include>qlo/pricingengines.hpp</include>
  </includes>
  <copyright>
    Copyright (C) 2006 Ferdinando Ametrano
    Copyright (C) 2005 Aurelien Chanudet
  </copyright>
  <Functions>

    <Member name='qlCapFloorType' libraryClass='CapFloor'>
      <description>Returns the type (e.g. Cap, Floor) for the given CapFloor object</description>
      <libraryFunction>type</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue enumeration='QuantLib::CapFloor::Type'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorCapRates' libraryClass='CapFloor'>
      <description>Returns the cap rates for the given CapFloor object</description>
      <libraryFunction>capRates</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue libraryType='QuantLib::Rate'>
        <type>double</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorFloorRates' libraryClass='CapFloor'>
      <description>Returns the floor rates for the given CapFloor object</description>
      <libraryFunction>floorRates</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue libraryType='QuantLib::Rate'>
        <type>double</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorAtmRate' libraryClass='CapFloor'>
      <description>Returns the at-the-money rate for the given CapFloor object</description>
      <libraryFunction>atmRate</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue libraryType='QuantLib::Rate'>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorStartDate' libraryClass='CapFloor'>
      <description>Returns the start (i.e. first accrual) date for the given CapFloor object</description>
      <libraryFunction>startDate</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue libraryType='QuantLib::Date'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorMaturityDate' libraryClass='CapFloor'>
      <description>Returns the maturity (i.e. last payment) date for the given CapFloor object</description>
      <libraryFunction>maturityDate</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue libraryType='QuantLib::Date'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorLastFixingDate' libraryClass='CapFloor'>
      <description>Returns the last fixing date for the given CapFloor object</description>
      <libraryFunction>lastFixingDate</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue libraryType='QuantLib::Date'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorImpliedVolatility' libraryClass='CapFloor'>
      <description>Returns the volatility implied in a given price for the given CapFloor object</description>
      <libraryFunction>impliedVolatility</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='price'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>Price used to infer the implied volatility</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue libraryType='QuantLib::Volatility'>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorLegAnalysis' objectClass='CapFloor'>
      <description>Returns the cash flow analysis for the given CapFloor object</description>
      <libraryFunction>legAnalysis</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>any</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlCapFloor'>
      <libraryFunction>CapFloor</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='optionType' enumeration='QuantLib::CapFloor::Type'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>option type (cap or floor)</description>
          </Parameter>
          <Parameter name='legID' objectClass='Leg'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>coupon vector</description>
          </Parameter>
          <Parameter name='strikes' libraryType='QuantLib::Rate'>
            <type>double</type>
            <tensorRank>vector</tensorRank>
            <description>strikes</description>
          </Parameter>
          <Parameter name='YieldCurve' libToHandle='YieldTermStructure'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>discounting yield term structure object ID</description>
          </Parameter>
          <Parameter name='capFloorEngine' libraryClass='PricingEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Cap floor pricing engine object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlMakeCapFloor'>
      <libraryFunction>CapFloor</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='optionType' enumeration='QuantLib::CapFloor::Type'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>option type (cap or floor)</description>
          </Parameter>
          <Parameter name='length' libraryType='QuantLib::Period'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>as period (e.g. 2Y)</description>
          </Parameter>
          <Parameter name='index' libraryClass='IborIndex'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>floating index object ID</description>
          </Parameter>
          <Parameter name='strike' libraryType='QuantLib::Rate' default='QuantLib::Null&lt;QuantLib::Rate&gt;()'>
            <type>double</type>
            <tensorRank>scalar</tensorRank>
            <description>strike</description>
          </Parameter>
          <!--<Parameter name='forwardStart' libraryType='QuantLib::Period' default='"0D"'>-->
          <Parameter name='forwardStart' libraryType='QuantLib::Period'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>as period (e.g. '2Y'). The default is '0D'. If '0D' the first caplet is removed.</description>
          </Parameter>
          <!--<Parameter name='capFloorEngineID' libraryClass='PricingEngine' default='boost::shared_ptr&lt;QuantLib::PricingEngine&gt;()'>-->
          <Parameter name='capFloorEngine' libraryClass='PricingEngine'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Cap floor pricing engine object ID</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Constructor>

  </Functions>
</Category>
