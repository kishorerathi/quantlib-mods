<Category name='exercise'>
  <description>functions to construct and use Exercise objects</description>
  <displayName>Exercise</displayName>
  <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <copyright>
    Copyright (C) 2006 Ferdinando Ametrano
    Copyright (C) 2006 Cristina Duminuco
    Copyright (C) 2006 Eric Ehlers
  </copyright>
  <Functions>

    <Member name='qlExerciseDates' libraryClass='Exercise'>
      <description>Returns all exercise dates</description>
      <libraryFunction>dates</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue  libraryType='QuantLib::Date'>
        <type>long</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlExerciseLastDate' libraryClass='Exercise'>
      <description>Returns last exercise date</description>
      <libraryFunction>lastDate</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='true' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue  libraryType='QuantLib::Date'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlAmericanExercise'>
      <libraryFunction>AmericanExercise</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='earliestDate' libraryType='QuantLib::Date' exampleValue ='39083'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>earliest exercise date</description>
          </Parameter>
          <Parameter name='latestDate' libraryType='QuantLib::Date' exampleValue ='39448'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>latest exercise date</description>
          </Parameter>
          <Parameter name='payoffAtExpiry' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>payoff at expiry</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlEuropeanExercise'>
      <libraryFunction>EuropeanExercise</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
        <Calc/>
        <Guile/>
        <C/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='expiryDate' libraryType='QuantLib::Date' exampleValue ='39448'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>expiry date</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlBermudanExercise'>
      <libraryFunction>BermudanExercise</libraryFunction>
      <SupportedPlatforms>
        <Excel calcInWizard='false' />
        <Calc/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='dates' libraryType='QuantLib::Date' exampleValue ='39083;39448'>
            <type>long</type>
            <tensorRank>vector</tensorRank>
            <description>dates</description>
          </Parameter>
          <Parameter name='payoffAtExpiry' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>payoff at expiry</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

  </Functions>
</Category>
