
/*
 Copyright (C) 2005 Eric Ehlers

 This file is part of QuantLib, a free-software/open-source library
 for financial quantitative analysts and developers - http://quantlib.org/

 QuantLib is free software: you can redistribute it and/or modify it under the
 terms of the QuantLib license.  You should have received a copy of the
 license along with this program; if not, please email quantlib-dev@lists.sf.net
 The license is also available online at http://quantlib.org/html/license.html

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the license for more details.
*/

/*! \file
    \brief ementations of the ObjectHandler functions defined in 
    ohfunctions.xml for use within the Addins.

    The functions implemented in this file are invoked in the Addins from code
    autogenerated by srcgen.py.
*/

#ifndef qla_ohfunctions_hpp
#define qla_ohfunctions_hpp

#include <oh/objhandler.hpp>

namespace QuantLibAddin {

    const bool ohDeleteAllObjects();

    const bool ohDeleteObject(const std::string &handleObject);

    /*const std::vector < std::string > ohPropertyNames(const std::string &handleObject);*/

    /*const boost::any ohPropertyValue(
            const std::string &handleObject,
            const std::string &propertyName);*/

    const long ohObjectCount();

    const std::vector < std::string > ohHandleList();

    const bool ohLogAllObjects();

    const std::string &ohLogMessage(
            const std::string &logMessage,
            const long &logLevel = 4);

    const bool ohLogObject(
            const std::string &handleObject);

    const std::string &ohSetLogFile(
            const std::string &logFileName,
            const long &logLevel = 4);

    const long &ohSetLogLevel(
            const long &logLevel);

    const bool ohSetConsole(
            const long &console,
            const long &logLevel = 4);

    const std::string ohVersion();

    const bool ohDependsOn();

}

#endif

