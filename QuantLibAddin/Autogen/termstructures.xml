<?xml version='1.0'?>
<!-- DOCTYPE functiongroup SYSTEM 'functiongroup.dtd' -->
<functiongroup>
<headeronly>false</headeronly>
<desc>functions to construct QuantLib term structure objects</desc>
<displayname>Term Structures</displayname>
<functions>

<function>
<name>QL_DEPOSIT_RATE_HELPER</name>
<codename>qlDepositRateHelper</codename>
<desc>construct and return a handle to a deposit rate-helper object</desc>
<constructor>true</constructor>
<qlfunction>DepositRateHelper</qlfunction>
<parameters>
    <param>
        <name>quote</name>
        <type>double</type>
        <tensorrank>scalar</tensorrank>
        <desc>quote</desc>
    </param>
    <param>
        <name>maturity</name>
        <type>long</type>
        <tensorrank>scalar</tensorrank>
        <desc>maturity</desc>
    </param>
    <param>
        <name>timeUnits</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>time units applying to above maturity</desc>
    </param>
    <param>
        <name>fixingDays</name>
        <type>long</type>
        <tensorrank>scalar</tensorrank>
        <desc>fixing days (e.g. 2)</desc>
    </param>
    <param>
        <name>calendar</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>calendar (e.g. TARGET)</desc>
    </param>
    <param>
        <name>convention</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>business day convention (e.g. ModifiedFollowing)</desc>
    </param>
    <param>
        <name>dayCounter</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>day counter (e.g. Actual360)</desc>
    </param>
</parameters>
<returnval>
    <type>property</type>
    <tensorrank>vector</tensorrank>
    <desc>vector of properties describing rate-helper object</desc>
</returnval>
</function>

<function>
<name>QL_FUTURE_RATE_HELPER</name>
<codename>qlFutureRateHelper</codename>
<desc>construct and return a handle to a future rate-helper object</desc>
<constructor>true</constructor>
<qlfunction>FutureRateHelper</qlfunction>
<parameters>
    <param>
        <name>price</name>
        <type>double</type>
        <tensorrank>scalar</tensorrank>
        <desc>future price</desc>
    </param>
    <param>
        <name>IMM</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>IMM expiry shortcut</desc>
    </param>
    <param>
        <name>months</name>
        <type>long</type>
        <tensorrank>scalar</tensorrank>
        <desc>future contract lenght in months</desc>
    </param>
    <param>
        <name>DayCounter</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>day counter (e.g. Thirty360)</desc>
    </param>
    <param>
        <name>bDayConvention</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>business day convention (e.g. ModifiedFollowing)</desc>
    </param>
	<param>
        <name>calendar</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>calendar (e.g. TARGET)</desc>
    </param>
    <param>
        <name>decade</name>
        <type>long</type>
        <tensorrank>scalar</tensorrank>
        <desc>base decade for the IMM shortcut (e.g. 2000 for H4 -> March 2004)</desc>
    </param>
</parameters>
<returnval>
    <type>property</type>
    <tensorrank>vector</tensorrank>
    <desc>vector of properties describing rate-helper object</desc>
</returnval>
</function>

<function call_type='QL_OBJECT'>
<name>QL_GET_DF</name>
<codename>qlGetDf</codename>
<desc>retrieve a discount factor at specified date</desc>
<constructor>false</constructor>
<qlfunction>discount</qlfunction>
<parameters>
    <param class='YieldTermStructure'>
        <name>handle</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>handle of the Yield Term Structure object</desc>
    </param>
    <param ql_type='QuantLib::Date'>
        <name>DfDate</name>
        <type>long</type>
        <tensorrank>scalar</tensorrank>
        <desc>date</desc>
    </param>
    <param>
        <name>iPol</name>
        <type>bool</type>
        <tensorrank>scalar</tensorrank>
        <desc>Interpolate Flag</desc>
    </param>
    <param ignore='yes'>
        <name>trigger</name>
        <type>any</type>
        <tensorrank>scalar</tensorrank>
        <desc>dep tracking trigger</desc>
    </param>
</parameters>
<returnval>
    <type>double</type>
    <tensorrank>scalar</tensorrank>
    <desc>the discount factor</desc>
</returnval>
</function>

<function>
<name>QL_PIECEWISE_FLAT_FORWARD</name>
<codename>qlPiecewiseFlatForward</codename>
<desc>construct and return a handle to a piecewise flat forward term structure</desc>
<constructor>true</constructor>
<qlfunction>PiecewiseFlatForward</qlfunction>
<parameters>
    <param>
        <name>evaluationDate</name>
        <type>long</type>
        <tensorrank>scalar</tensorrank>
        <desc>evaluation date</desc>
    </param>
    <param>
        <name>settlementDate</name>
        <type>long</type>
        <tensorrank>scalar</tensorrank>
        <desc>settlement date (e.g. evaluationDate + 2)</desc>
    </param>
    <param>
        <name>rateHelpers</name>
        <type>string</type>
        <tensorrank>vector</tensorrank>
        <desc>vector of rate-helper handles</desc>
    </param>
    <param>
        <name>dayCounter</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>day counter (e.g. Actual360)</desc>
    </param>
</parameters>
<returnval>
    <type>property</type>
    <tensorrank>vector</tensorrank>
    <desc>vector of properties describing piecewise flat forward term structure</desc>
</returnval>
</function>

<function>
<name>QL_SET_QUOTE</name>
<codename>qlSetQuote</codename>
<desc>retrieve a discount factor at specified date</desc>
<constructor>false</constructor>
<qlfunction>setQuote</qlfunction>
<parameters>
    <param class='RateHelper'>
        <name>handle</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>handle of the Rate Helper object</desc>
    </param>
    <param>
        <name>Quote</name>
        <type>double</type>
        <tensorrank>scalar</tensorrank>
        <desc>the new qoute</desc>
    </param>
</parameters>
<returnval>
    <type>double</type>
    <tensorrank>scalar</tensorrank>
    <desc>diff new quote - old quote</desc>
</returnval>
</function>

<function>
<name>QL_SWAP_RATE_HELPER</name>
<codename>qlSwapRateHelper</codename>
<desc>construct and return a handle to a swap rate-helper object</desc>
<constructor>true</constructor>
<qlfunction>SwapRateHelper</qlfunction>
<parameters>
    <param>
        <name>quote</name>
        <type>double</type>
        <tensorrank>scalar</tensorrank>
        <desc>quote</desc>
    </param>
    <param>
        <name>maturity</name>
        <type>long</type>
        <tensorrank>scalar</tensorrank>
        <desc>maturity</desc>
    </param>
    <param>
        <name>timeUnits</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>time units applying to above maturity</desc>
    </param>
    <param>
        <name>fixingDays</name>
        <type>long</type>
        <tensorrank>scalar</tensorrank>
        <desc>fixing days (e.g. 2)</desc>
    </param>
	<param>
        <name>calendar</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>calendar (e.g. TARGET)</desc>
    </param>
    <param>
        <name>fixedLegFrequency</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>fixed leg frequency (e.g. Annual)</desc>
    </param>
    <param>
        <name>fixedLegConvention</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>fixed leg convention (e.g. Unadjusted)</desc>
    </param>
    <param>
        <name>fixedLegDayCounter</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>fixed leg day counter (e.g. Thirty360)</desc>
    </param>
    <param>
        <name>floatingLegFrequency</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>floating leg frequency (e.g. Quarterly, Semiannual, etc.)</desc>
    </param>
    <param>
        <name>floatingLegConvention</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>floating leg convention (e.g. ModifiedFollowing)</desc>
    </param>
</parameters>
<returnval>
    <type>property</type>
    <tensorrank>vector</tensorrank>
    <desc>vector of properties describing rate-helper object</desc>
</returnval>
</function>

<function>
<name>QL_ZERO_CURVE</name>
<codename>qlZeroCurve</codename>
<desc>construct and return a handle to a ZeroCurve object</desc>
<constructor>true</constructor>
<qlfunction>ZeroCurve</qlfunction>
<parameters>
    <param>
        <name>curveDates</name>
        <type>long</type>
        <tensorrank>vector</tensorrank>
        <desc>dates of the zero curve</desc>
    </param>
    <param>
        <name>curveYields</name>
        <type>double</type>
        <tensorrank>vector</tensorrank>
        <desc>yields of the zero curve</desc>
    </param>
    <param>
        <name>dayCounterID</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>day counter ID</desc>
    </param>
</parameters>
<returnval>
    <type>property</type>
    <tensorrank>vector</tensorrank>
    <desc>vector of properties describing the Zero Curve</desc>
</returnval>
</function>

</functions>
</functiongroup>

