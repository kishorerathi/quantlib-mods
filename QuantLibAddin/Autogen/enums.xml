<?xml version='1.0'?>
<!-- DOCTYPE functiongroup SYSTEM 'functiongroup.dtd' -->
<enumerations>
<enumdefs>

<enumdef>
<class>QuantLib::Average::Type</class>
<constructor>true</constructor>
<defs>
<def>
<string>ARITHMETIC</string>
<enum>QuantLib::Average::Arithmetic</enum>
</def>
<def>
<string>GEOMETRIC</string>
<enum>QuantLib::Average::Geometric</enum>
</def>
</defs>
</enumdef>

<enumdef>
<class>QuantLib::Barrier::Type</class>
<constructor>true</constructor>
<defs>
<def>
<string>DOWNIN</string>
<enum>QuantLib::Barrier::DownIn</enum>
</def>
<def>
<string>DOWNOUT</string>
<enum>QuantLib::Barrier::DownOut</enum>
</def>
<def>
<string>UPIN</string>
<enum>QuantLib::Barrier::UpIn</enum>
</def>
<def>
<string>UPOUT</string>
<enum>QuantLib::Barrier::UpOut</enum>
</def>
</defs>
</enumdef>

<enumdef>
<class>QuantLib::BasketOption::BasketType</class>
<constructor>true</constructor>
<defs>
<def>
<string>MAX</string>
<enum>QuantLib::BasketOption::Max</enum>
</def>
<def>
<string>MIN</string>
<enum>QuantLib::BasketOption::Min</enum>
</def>
</defs>
</enumdef>

<enumdef>
<class>QuantLib::BusinessDayConvention</class>
<constructor>true</constructor>
<defs>
<def>
<string>FOLLOWING</string>
<enum>QuantLib::Following</enum>
</def>
<def>
<string>MODIFIEDFOLLOWING</string>
<enum>QuantLib::ModifiedFollowing</enum>
</def>
<def>
<string>MODIFIEDPRECEDING</string>
<enum>QuantLib::ModifiedPreceding</enum>
</def>
<def>
<string>MONTHENDREFERENCE</string>
<enum>QuantLib::MonthEndReference</enum>
</def>
<def>
<string>PRECEDING</string>
<enum>QuantLib::Preceding</enum>
</def>
<def>
<string>UNADJUSTED</string>
<enum>QuantLib::Unadjusted</enum>
</def>
</defs>
</enumdef>

<enumdef>
<class>QuantLib::Calendar</class>
<constructor>false</constructor>
<defs>
<def>
<string>BEIJING</string>
<enum>QuantLib::Beijing()</enum>
</def>
<def>
<string>BRATISLAVA</string>
<enum>QuantLib::Bratislava()</enum>
</def>
<def>
<string>BUDAPEST</string>
<enum>QuantLib::Budapest()</enum>
</def>
<def>
<string>COPENHAGEN</string>
<enum>QuantLib::Copenhagen()</enum>
</def>
<def>
<string>GERMANY_EUREX</string>
<enum>QuantLib::Germany(QuantLib::Germany::Eurex)</enum>
</def>
<def>
<string>GERMANY_FFTEXCHNG</string>
<enum>QuantLib::Germany(QuantLib::Germany::FrankfurtStockExchange)</enum>
</def>
<def>
<string>GERMANY</string>
<enum>QuantLib::Germany()</enum>
</def>
<def>
<string>GERMANY_SETTL</string>
<enum>QuantLib::Germany(QuantLib::Germany::Settlement)</enum>
</def>
<def>
<string>GERMANY_XETRA</string>
<enum>QuantLib::Germany(QuantLib::Germany::Xetra)</enum>
</def>
<def>
<string>HELSINKI</string>
<enum>QuantLib::Helsinki()</enum>
</def>
<def>
<string>HONGKONG</string>
<enum>QuantLib::HongKong()</enum>
</def>
<def>
<string>ITALY_EXCHNG</string>
<enum>QuantLib::Italy(QuantLib::Italy::Exchange)</enum>
</def>
<def>
<string>INSTANBUL</string>
<enum>QuantLib::Istanbul()</enum>
</def>
<def>
<string>ITALY</string>
<enum>QuantLib::Italy()</enum>
</def>
<def>
<string>ITALY_SETTL</string>
<enum>QuantLib::Italy(QuantLib::Italy::Settlement)</enum>
</def>
<def>
<string>JOHANNESBURG</string>
<enum>QuantLib::Johannesburg()</enum>
</def>
<def>
<string>NULLCALENDAR</string>
<enum>QuantLib::NullCalendar()</enum>
</def>
<def>
<string>OSLO</string>
<enum>QuantLib::Oslo()</enum>
</def>
<def>
<string>PRAGUE</string>
<enum>QuantLib::Prague()</enum>
</def>
<def>
<string>RIYADH</string>
<enum>QuantLib::Riyadh()</enum>
</def>
<def>
<string>SEOUL</string>
<enum>QuantLib::Seoul()</enum>
</def>
<def>
<string>SINGAPORE</string>
<enum>QuantLib::Singapore()</enum>
</def>
<def>
<string>STOCKHOLM</string>
<enum>QuantLib::Stockholm()</enum>
</def>
<def>
<string>SYDNEY</string>
<enum>QuantLib::Sydney()</enum>
</def>
<def>
<string>TAIWAN</string>
<enum>QuantLib::Taiwan()</enum>
</def>
<def>
<string>TARGET</string>
<enum>QuantLib::TARGET()</enum>
</def>
<def>
<string>TOKYO</string>
<enum>QuantLib::Tokyo()</enum>
</def>
<def>
<string>TORONTO</string>
<enum>QuantLib::Toronto()</enum>
</def>
<def>
<string>UNITEDKINGDOM_EXCHNG</string>
<enum>QuantLib::UnitedKingdom(QuantLib::UnitedKingdom::Exchange)</enum>
</def>
<def>
<string>UNITEDKINGDOM_METALS</string>
<enum>QuantLib::UnitedKingdom(QuantLib::UnitedKingdom::Metals)</enum>
</def>
<def>
<string>UNITEDKINGDOM</string>
<enum>QuantLib::UnitedKingdom()</enum>
</def>
<def>
<string>UNITEDKINGDOM_SETTL</string>
<enum>QuantLib::UnitedKingdom(QuantLib::UnitedKingdom::Settlement)</enum>
</def>
<def>
<string>UNITEDSTATES_EXCHNG</string>
<enum>QuantLib::UnitedStates(QuantLib::UnitedStates::Exchange)</enum>
</def>
<def>
<string>UNITEDSTATES_GOV</string>
<enum>QuantLib::UnitedStates(QuantLib::UnitedStates::GovernmentBond)</enum>
</def>
<def>
<string>UNITEDSTATES</string>
<enum>QuantLib::UnitedStates()</enum>
</def>
<def>
<string>UNITEDSTATES_SETTL</string>
<enum>QuantLib::UnitedStates(QuantLib::UnitedStates::Settlement)</enum>
</def>
<def>
<string>WARSAW</string>
<enum>QuantLib::Warsaw()</enum>
</def>
<def>
<string>WELLINGTON</string>
<enum>QuantLib::Wellington()</enum>
</def>
<def>
<string>ZURICH</string>
<enum>QuantLib::Zurich()</enum>
</def>
</defs>
</enumdef>

<enumdef documentation_only='true'>
<class>QuantLib::CapFloor</class>
<constructor>true</constructor>
<defs>
<def>
<string>CAP</string>
<enum>QuantLib::Cap</enum>
</def>
<def>
<string>FLOOR</string>
<enum>QuantLib::Floor</enum>
</def>
</defs>
</enumdef>

<enumdef>
<class>QuantLib::Compounding</class>
<constructor>true</constructor>
<defs>
<def>
<string>COMPOUNDED</string>
<enum>QuantLib::Compounded</enum>
</def>
<def>
<string>CONTINUOUS</string>
<enum>QuantLib::Continuous</enum>
</def>
<def>
<string>SIMPLE</string>
<enum>QuantLib::Simple</enum>
</def>
<def>
<string>SIMPLETHENCOMPOUNDED</string>
<enum>QuantLib::SimpleThenCompounded</enum>
</def>
</defs>
</enumdef>

<enumdef>
<class>QuantLib::Currency</class>
<constructor>false</constructor>
<defs>
<def>
<string>ARS</string>
<enum>QuantLib::ARSCurrency()</enum>
</def>
<def>
<string>ATS</string>
<enum>QuantLib::ATSCurrency()</enum>
</def>
<def>
<string>AUD</string>
<enum>QuantLib::AUDCurrency()</enum>
</def>
<def>
<string>BDT</string>
<enum>QuantLib::BDTCurrency()</enum>
</def>
<def>
<string>BEF</string>
<enum>QuantLib::BEFCurrency()</enum>
</def>
<def>
<string>BGL</string>
<enum>QuantLib::BGLCurrency()</enum>
</def>
<def>
<string>BRL</string>
<enum>QuantLib::BRLCurrency()</enum>
</def>
<def>
<string>BYR</string>
<enum>QuantLib::BYRCurrency()</enum>
</def>
<def>
<string>CAD</string>
<enum>QuantLib::CADCurrency()</enum>
</def>
<def>
<string>CHF</string>
<enum>QuantLib::CHFCurrency()</enum>
</def>
<def>
<string>CLP</string>
<enum>QuantLib::CLPCurrency()</enum>
</def>
<def>
<string>CNY</string>
<enum>QuantLib::CNYCurrency()</enum>
</def>
<def>
<string>COP</string>
<enum>QuantLib::COPCurrency()</enum>
</def>
<def>
<string>CYP</string>
<enum>QuantLib::CYPCurrency()</enum>
</def>
<def>
<string>CZK</string>
<enum>QuantLib::CZKCurrency()</enum>
</def>
<def>
<string>DEM</string>
<enum>QuantLib::DEMCurrency()</enum>
</def>
<def>
<string>DKK</string>
<enum>QuantLib::DKKCurrency()</enum>
</def>
<def>
<string>EEK</string>
<enum>QuantLib::EEKCurrency()</enum>
</def>
<def>
<string>ESP</string>
<enum>QuantLib::ESPCurrency()</enum>
</def>
<def>
<string>EUR</string>
<enum>QuantLib::EURCurrency()</enum>
</def>
<def>
<string>FIM</string>
<enum>QuantLib::FIMCurrency()</enum>
</def>
<def>
<string>FRF</string>
<enum>QuantLib::FRFCurrency()</enum>
</def>
<def>
<string>GBP</string>
<enum>QuantLib::GBPCurrency()</enum>
</def>
<def>
<string>GRD</string>
<enum>QuantLib::GRDCurrency()</enum>
</def>
<def>
<string>HKD</string>
<enum>QuantLib::HKDCurrency()</enum>
</def>
<def>
<string>HUF</string>
<enum>QuantLib::HUFCurrency()</enum>
</def>
<def>
<string>IEP</string>
<enum>QuantLib::IEPCurrency()</enum>
</def>
<def>
<string>ILS</string>
<enum>QuantLib::ILSCurrency()</enum>
</def>
<def>
<string>INR</string>
<enum>QuantLib::INRCurrency()</enum>
</def>
<def>
<string>IQD</string>
<enum>QuantLib::IQDCurrency()</enum>
</def>
<def>
<string>IRR</string>
<enum>QuantLib::IRRCurrency()</enum>
</def>
<def>
<string>ISK</string>
<enum>QuantLib::ISKCurrency()</enum>
</def>
<def>
<string>ITL</string>
<enum>QuantLib::ITLCurrency()</enum>
</def>
<def>
<string>JPY</string>
<enum>QuantLib::JPYCurrency()</enum>
</def>
<def>
<string>KRW</string>
<enum>QuantLib::KRWCurrency()</enum>
</def>
<def>
<string>KWD</string>
<enum>QuantLib::KWDCurrency()</enum>
</def>
<def>
<string>LTL</string>
<enum>QuantLib::LTLCurrency()</enum>
</def>
<def>
<string>LUF</string>
<enum>QuantLib::LUFCurrency()</enum>
</def>
<def>
<string>LVL</string>
<enum>QuantLib::LVLCurrency()</enum>
</def>
<def>
<string>MTL</string>
<enum>QuantLib::MTLCurrency()</enum>
</def>
<def>
<string>MXN</string>
<enum>QuantLib::MXNCurrency()</enum>
</def>
<def>
<string>NLG</string>
<enum>QuantLib::NLGCurrency()</enum>
</def>
<def>
<string>NOK</string>
<enum>QuantLib::NOKCurrency()</enum>
</def>
<def>
<string>NPR</string>
<enum>QuantLib::NPRCurrency()</enum>
</def>
<def>
<string>NZD</string>
<enum>QuantLib::NZDCurrency()</enum>
</def>
<def>
<string>PKR</string>
<enum>QuantLib::PKRCurrency()</enum>
</def>
<def>
<string>PLN</string>
<enum>QuantLib::PLNCurrency()</enum>
</def>
<def>
<string>PTE</string>
<enum>QuantLib::PTECurrency()</enum>
</def>
<def>
<string>ROL</string>
<enum>QuantLib::ROLCurrency()</enum>
</def>
<def>
<string>SAR</string>
<enum>QuantLib::SARCurrency()</enum>
</def>
<def>
<string>SEK</string>
<enum>QuantLib::SEKCurrency()</enum>
</def>
<def>
<string>SGD</string>
<enum>QuantLib::SGDCurrency()</enum>
</def>
<def>
<string>SIT</string>
<enum>QuantLib::SITCurrency()</enum>
</def>
<def>
<string>SKK</string>
<enum>QuantLib::SKKCurrency()</enum>
</def>
<def>
<string>THB</string>
<enum>QuantLib::THBCurrency()</enum>
</def>
<def>
<string>TRL</string>
<enum>QuantLib::TRLCurrency()</enum>
</def>
<def>
<string>TTD</string>
<enum>QuantLib::TTDCurrency()</enum>
</def>
<def>
<string>TWD</string>
<enum>QuantLib::TWDCurrency()</enum>
</def>
<def>
<string>USD</string>
<enum>QuantLib::USDCurrency()</enum>
</def>
<def>
<string>VEB</string>
<enum>QuantLib::VEBCurrency()</enum>
</def>
<def>
<string>ZAR</string>
<enum>QuantLib::ZARCurrency()</enum>
</def>
</defs>
</enumdef>

<enumdef>
<class>QuantLib::DayCounter</class>
<constructor>false</constructor>
<defs>
<def>
<string>ACTUAL360</string>
<enum>QuantLib::Actual360()</enum>
</def>
<def>
<string>ACTUAL365FIXED</string>
<enum>QuantLib::Actual365Fixed()</enum>
</def>
<def>
<string>ACTUALACTUAL_AFB</string>
<enum>QuantLib::ActualActual(QuantLib::ActualActual::AFB)</enum>
</def>
<def>
<string>ACTUALACTUAL_BOND</string>
<enum>QuantLib::ActualActual(QuantLib::ActualActual::Bond)</enum>
</def>
<def>
<string>ACTUALACTUAL_EURO</string>
<enum>QuantLib::ActualActual(QuantLib::ActualActual::Euro)</enum>
</def>
<def>
<string>ACTUALACTUAL_HISTORICAL</string>
<enum>QuantLib::ActualActual(QuantLib::ActualActual::Historical)</enum>
</def>
<def>
<string>ACTUALACTUAL_ISDA</string>
<enum>QuantLib::ActualActual(QuantLib::ActualActual::ISDA)</enum>
</def>
<def>
<string>ACTUALACTUAL_ISMA</string>
<enum>QuantLib::ActualActual(QuantLib::ActualActual::ISMA)</enum>
</def>
<def>
<string>ACTUALACTUAL</string>
<enum>QuantLib::ActualActual()</enum>
</def>
<def>
<string>ONE</string>
<enum>QuantLib::OneDayCounter()</enum>
</def>
<def>
<string>SIMPLE</string>
<enum>QuantLib::SimpleDayCounter()</enum>
</def>
<def>
<string>THIRTY360_BOND</string>
<enum>QuantLib::Thirty360(QuantLib::Thirty360::BondBasis)</enum>
</def>
<def>
<string>THIRTY360_EU_BND</string>
<enum>QuantLib::Thirty360(QuantLib::Thirty360::EurobondBasis)</enum>
</def>
<def>
<string>THIRTY360_EU</string>
<enum>QuantLib::Thirty360(QuantLib::Thirty360::European)</enum>
</def>
<def>
<string>THIRTY360_ITL</string>
<enum>QuantLib::Thirty360(QuantLib::Thirty360::Italian)</enum>
</def>
<def>
<string>THIRTY360</string>
<enum>QuantLib::Thirty360()</enum>
</def>
<def>
<string>THIRTY360_USA</string>
<enum>QuantLib::Thirty360(QuantLib::Thirty360::USA)</enum>
</def>
</defs>
</enumdef>

<enumdef documentation_only='true'>
<class>QuantLib::Exercise</class>
<constructor>true</constructor>
<defs>
<def>
<string>AMERICAN</string>
<enum>QuantLib::AmericanExercise</enum>
</def>
<def>
<string>EUROPEAN</string>
<enum>QuantLib::EuropeanExercise</enum>
</def>
</defs>
</enumdef>

<enumdef>
<class>QuantLib::Frequency</class>
<constructor>true</constructor>
<defs>
<def>
<string>ANNUAL</string>
<enum>QuantLib::Annual</enum>
</def>
<def>
<string>BIMONTHLY</string>
<enum>QuantLib::Bimonthly</enum>
</def>
<def>
<string>EVERY4MONTH</string>
<enum>QuantLib::EveryFourthMonth</enum>
</def>
<def>
<string>MONTHLY</string>
<enum>QuantLib::Monthly</enum>
</def>
<def>
<string>NOFREQUENCY</string>
<enum>QuantLib::NoFrequency</enum>
</def>
<def>
<string>ONCE</string>
<enum>QuantLib::Once</enum>
</def>
<def>
<string>QUARTERLY</string>
<enum>QuantLib::Quarterly</enum>
</def>
<def>
<string>SEMIANNUAL</string>
<enum>QuantLib::Semiannual</enum>
</def>
</defs>
</enumdef>

<enumdef>
<class>QuantLib::Option::Type</class>
<constructor>true</constructor>
<defs>
<def>
<string>CALL</string>
<enum>QuantLib::Option::Call</enum>
</def>
<def>
<string>PUT</string>
<enum>QuantLib::Option::Put</enum>
</def>
</defs>
</enumdef>

<enumdef documentation_only='true'>
<class>QuantLib::PricingEngine</class>
<constructor>true</constructor>
<defs>
<def>
<string>AB</string>
<enum>QuantLib::AnalyticBarrierEngine</enum>
</def>
<def>
<string>AC</string>
<enum>QuantLib::AnalyticCliquetEngine</enum>
</def>
<def>
<string>ACGAPA</string>
<enum>QuantLib::AnalyticContinuousGeometricAveragePriceAsianEngine</enum>
</def>
<def>
<string>ADA</string>
<enum>QuantLib::AnalyticDigitalAmericanEngine</enum>
</def>
<def>
<string>ADGAPA</string>
<enum>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianEngine</enum>
</def>
<def>
<string>ADE</string>
<enum>QuantLib::AnalyticDividendEuropeanEngine</enum>
</def>
<def>
<string>AE</string>
<enum>QuantLib::AnalyticEuropeanEngine</enum>
</def>
<def>
<string>AP</string>
<enum>QuantLib::AnalyticPerformanceEngine</enum>
</def>
<def>
<string>BAWA</string>
<enum>QuantLib::BaroneAdesiWhaleyApproximationEngine</enum>
</def>
<def>
<string>AEQPB</string>
<enum>QuantLib::AdditiveEQPBinomialTree</enum>
</def>
<def>
<string>CRR</string>
<enum>QuantLib::CoxRossRubinstein</enum>
</def>
<def>
<string>JR</string>
<enum>QuantLib::JarrowRudd</enum>
</def>
<def>
<string>LR</string>
<enum>QuantLib::LeisenReimer</enum>
</def>
<def>
<string>TIAN</string>
<enum>QuantLib::Tian</enum>
</def>
<def>
<string>TRI</string>
<enum>QuantLib::Trigeorgis</enum>
</def>
<def>
<string>BSA</string>
<enum>QuantLib::BjerksundStenslandApproximationEngine</enum>
</def>
<def>
<string>PE</string>
<enum>QuantLib::PricingEngine</enum>
</def>
<def>
<string>SE</string>
<enum>QuantLib::StulzEngine</enum>
</def>
<def>
<string>FE</string>
<enum>QuantLib::ForwardEngine</enum>
</def>
<def>
<string>FPE</string>
<enum>QuantLib::ForwardPerformanceEngine</enum>
</def>
</defs>
</enumdef>

<enumdef documentation_only='true'>
<class>QuantLib::StrikedTypePayoff</class>
<constructor>true</constructor>
<defs>
<def>
<string>ASSETORNOTHING</string>
<enum>QuantLib::AssetOrNothingPayoff</enum>
</def>
<def>
<string>CASHORNOTHING</string>
<enum>QuantLib::CashOrNothingPayoff</enum>
</def>
<def>
<string>GAP</string>
<enum>QuantLib::GapPayoff</enum>
</def>
<def>
<string>PERCENTAGESTRIKE</string>
<enum>QuantLib::PercentageStrikePayoff</enum>
</def>
<def>
<string>VANILLA</string>
<enum>QuantLib::PlainVanillaPayoff</enum>
</def>
<def>
<string>SUPERSHARE</string>
<enum>QuantLib::SuperSharePayoff</enum>
</def>
</defs>
</enumdef>

<enumdef>
<class>QuantLib::TimeUnit</class>
<constructor>true</constructor>
<defs>
<def>
<string>DAYS</string>
<enum>QuantLib::Days</enum>
</def>
<def>
<string>MONTHS</string>
<enum>QuantLib::Months</enum>
</def>
<def>
<string>WEEKS</string>
<enum>QuantLib::Weeks</enum>
</def>
<def>
<string>YEARS</string>
<enum>QuantLib::Years</enum>
</def>
</defs>
</enumdef>

</enumdefs>
</enumerations>

