<?xml version='1.0'?>
<!-- DOCTYPE functiongroup SYSTEM 'functiongroup.dtd' -->
<functiongroup>
<headeronly>true</headeronly>
<desc>diagnostic and utility functions</desc>
<displayname>Utilities</displayname>
<functions>

<function>
<name>qlListEnum</name>
<desc>return the members of a given enumeration</desc>
<constructor>false</constructor>
<qlfunction></qlfunction>
<parameters>
    <param>
        <name>enumId</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>name of the enum to list</desc>
    </param>
</parameters>
<returnval>
    <type>string</type>
    <tensorrank>vector</tensorrank>
    <desc>list of the members of the specified enumeration</desc>
</returnval>
</function>

<function>
<name>qlListRegisteredEnums</name>
<desc>return the names of all registered enums</desc>
<constructor>false</constructor>
<qlfunction></qlfunction>
<parameters></parameters>
<returnval>
    <type>string</type>
    <tensorrank>vector</tensorrank>
    <desc>list of names of registered enums</desc>
</returnval>
</function>

<function>
<name>qlListRegisteredTypes</name>
<desc>return the names of all registered complex types</desc>
<constructor>false</constructor>
<qlfunction></qlfunction>
<parameters></parameters>
<returnval>
    <type>string</type>
    <tensorrank>vector</tensorrank>
    <desc>list of names of registered enums</desc>
</returnval>
</function>

<function>
<name>qlListType</name>
<desc>return the members of a given complex type</desc>
<constructor>false</constructor>
<qlfunction></qlfunction>
<parameters>
    <param>
        <name>typeId</name>
        <type>string</type>
        <tensorrank>scalar</tensorrank>
        <desc>name of the complex type to list</desc>
    </param>
</parameters>
<returnval>
    <type>string</type>
    <tensorrank>vector</tensorrank>
    <desc>list of the members of the specified enumeration</desc>
</returnval>
</function>

<function>
<name>qlVersion</name>
<desc>returns the version number of QuantLib</desc>
<constructor>false</constructor>
<qlfunction></qlfunction>
<parameters></parameters>
<returnval>
    <type>string</type>
    <tensorrank>scalar</tensorrank>
    <desc>QuantLib version number</desc>
</returnval>
</function>

</functions>
</functiongroup>

