
/*
 Copyright (C) 2006, 2007 Eric Ehlers

 This file is part of QuantLib, a free-software/open-source library
 for financial quantitative analysts and developers - http://quantlib.org/

 QuantLib is free software developed by the QuantLib Group; you can
 redistribute it and/or modify it under the terms of the QuantLib License;
 either version 1.0, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 QuantLib License for more details.

 You should have received a copy of the QuantLib License along with this
 program; if not, please email <quantlib-dev@lists.sf.net>

 The QuantLib License is also available at <http://quantlib.org/license.shtml>.
 The members of the QuantLib Group are listed in the QuantLib License
*/

/*! \page build_tutorial Build Tutorial

This document explains how to build QuantLibXL and its prerequisites from
source code.

If you want a binary installation of the precompiled addin, please go instead
to the <a href="http://www.quantlibxl.org">QuantLibXL</a> web site.

If you want to build QuantLibAddin for platforms other than Microsoft Excel
on Windows, then please refer to the \ref installation document.

\ref sec_build_vc8 \n
\ref sec_build_python \n
\ref sec_build_boost \n
\ref sec_build_runtime \n
\ref sec_build_naming \n
\ref sec_build_variables \n
\ref sec_build_directories \n
\ref sec_build_source \n
\ref sec_build_log4cxx \n
\ref sec_build_quantlibxl \n
\ref sec_build_quantlibtestsuite \n
\ref sec_build_usage \n
\ref sec_build_support \n
\ref sec_build_links \n

\section sec_build_vc8 Install Visual C++

QuantLibXL can be built either with Visual Studio C++ 2003 (VC7) or 2005 (VC8).
The rest of this tutorial assumes the use of VC8.

This section explains how to install VC8, which is available either as a free
download called Visual Studio Express, or for purchase as a component of
Microsoft Visual Studio 2005 Professional Edition.

A prerequisite for VC8 is Windows XP Service Pack 2.  If you have the VC8 disks
you can get SP2 from them otherwise you need to install it online.

Then launch VC8 setup, when prompted to choose <tt>default/full/custom</tt>
installation, choose custom, and configure the next screen as shown:

<img src="images/VC8_custom.jpg">

\section sec_build_python Install Python

gensrc (described below) require you to have Python installed on your machine.
Please go to the 
<a href="http://www.python.org/">python website</a> and download and install Python.

\section sec_build_boost Install and Build Boost

For the build described in this tutorial you need Boost version 1.34.1.  Newer
versions of boost are probably OK too.

The main Boost website <a href="http://www.boost.org">http://www.boost.org</a>
includes instructions for downloading Boost and building the package from source code.
However it's easier to use the installer from the following link on the Boost 
Consulting website:
<a href="http://www.boost-consulting.com/products/free">http://www.boost-consulting.com/products/free</a>

Start the installer, when prompted to select the variant you require, specify
VC8 and Multithreaded, DLL e.g:

<img src="images/boost_variants.jpg">

The next dialog asks you which components you need, retain the default setting
which is to install everything.  Finish the installation.

\li You need to configure VC8 with the location of the Boost header files.
Under <tt>Tools/Options/Projects and Solutions/VC++ Directories</tt>, select
Include files and specify the path to the top level directory containing the
Boost header files <tt>C:\\Program Files\\boost\\boost_1_34_1</tt>:

<img src="images/boost_include_path.jpg">

\li You need to configure VC8 with the location of the Boost lib files. Under
<tt>Tools/Options/Projects and Solutions/VC++ Directories</tt>, select Library
files and specify the path to the top level directory containing the Boost lib
files <tt>C:\\Program Files\\boost\\boost_1_34_1\\lib</tt>:

<img src="images/boost_lib_path.jpg">

\section sec_build_runtime A Note on Runtime Libraries

You are now ready to build QuantLib.  You need to compile the following projects:
\li <a href="http://quantlib.org/">QuantLib 0.9.0</a> - the core C++ analytics
library
\li <b>log4cxx 0.9.7d</b> - a logging framework, used by ObjectHandler
\li <a href="http://www.objecthandler.org">ObjectHandler 0.9.0</a> - an object
repository
\li <a href="http://www.quantlibaddin.org">QuantLibAddin 0.9.0</a> - Addins for
QuantLib functionality
\li <a href="http://www.quantlibxl.org">QuantLibXL 0.9.0</a> - the Excel
implementation of QuantLibAddin

These projects are available with four different runtime libraries
(configurations): Debug, Debug CRTDLL, Release, and Release CRTDLL.  The Debug
and Release configurations are statically linked to the Microsoft C Runtime
environment.  The CRTDLL configurations are dynamically linked, meaning that
your executable will have a run-time dependency on the Microsoft C Runtime
DLLs.  

All five of the above projects must be built with the same runtime library.
This example assumes the use of configuration <b>Release</b>.

\section sec_build_naming A Note on VC Workspace Naming Conventions

QuantLib uses the following conventions for naming VC workspaces:

<table>
<tr><td><b>VC version</b></td><td><b>Workspace Name</b></td></tr>
<tr><td>7</td><td>xxx_vc7.sln</td></tr>
<tr><td>8</td><td>xxx_vc8.sln</td></tr>
</table>

Be sure to open the workspaces which correspond to the version of VC that
you're using.

\section sec_build_variables A Note on Environment Variables

Previous releases of QuantLibXL used environment variables to specify the
locations of certain prerequisite projects, this is no longer the case.  No
environment variables are required to build or run QuantLibXL.

\section sec_build_directories A Note on Directories

QuantLibXL includes a VC solution called QuantLibAll (see below) which allows
QuantLibXL and its prerequisites to be compiled at the same time.  This
solution uses relative pathnames to refer to the prerequisite projects
QuantLib, log4cxx, gensrc, ObjectHandler, and QuantLibAddin.  In order for this
to work, these projects must reside side by side in the directory tree, and the
name of each project's parent directory must not include the version number
(e.g.  "QuantLib" not "QuantLib-0.9.0").  

The QuantLibAll solution does not include the log4cxx solution, so log4cxx must
be built separately.  However the QuantLibAll solution does use relative
pathnames to pick up the location of the log4cxx libs, so log4cxx must be
installed alongside QuantLib in the directory tree.

By default the installer for each project uncompresses the source code to
<tt>C:\\build_ql_0_9_0</tt> (with the exception of the zip file for QuantLib,
where you must manually specify the target directory, removing the "0.9.0"
suffix from the directory name).  For purposes of this tutorial we assume the
packages have been installed in this way e.g.:
\verbatim
C:\build_ql_0_9_0\gensrc
C:\build_ql_0_9_0\log4cxx
C:\build_ql_0_9_0\ObjectHandler
C:\build_ql_0_9_0\QuantLib
C:\build_ql_0_9_0\QuantLibAddin
C:\build_ql_0_9_0\QuantLibXL
\endverbatim

\section sec_build_source Install the Source Code

Go to the 
<a href="http://sourceforge.net/project/showfiles.php?group_id=12740">QuantLib downloads page</a>, 
download <tt>QuantLib-0.9.0.zip</tt> and uncompress the package to
<tt>C:\\build_ql_0_9_0\\QuantLib</tt>.

Download <tt>log4cxx-0.9.7d.exe</tt> and uncompress the package to
<tt>C:\\build_ql_0_9_0\\log4cxx</tt>.

Download <tt>gensrc-0.9.0.exe</tt> and uncompress the package to
<tt>C:\\build_ql_0_9_0\\gensrc</tt>.

Download <tt>ObjectHandler-0.9.0.exe</tt> and uncompress the package to
<tt>C:\\build_ql_0_9_0\\ObjectHandler</tt>.

Download <tt>QuantLibAddin-0.9.0.exe</tt> and uncompress the package to
<tt>C:\\build_ql_0_9_0\\QuantLibAddin</tt>.

Download <tt>QuantLibXL-src-0.9.0.exe</tt> and uncompress the package to
<tt>C:\\build_ql_0_9_0\\QuantLibXL</tt>.

\section sec_build_log4cxx Build log4cxx

In VC8, open the log4cxx VC8 workspace
<tt>log4cxx-0.9.7d\\msvc\\log4cxx_vc8.sln</tt>.  Choose configuration
<tt>Release</tt>, solution <tt>static</tt>, and do <tt>Build/Build Static</tt>.

<img src="images/build_log4cxx.jpg">

The build process creates file
<tt>log4cxx-0.9.7d\\msvc\\lib\\log4cxxs-vc80-mt-s.lib</tt>.

\section sec_build_quantlibxl Build QuantLibXL

Open the VC8 solution <tt>QuantLibXL\\QuantLibAll_vc8.sln</tt>.  Choose
configuration <tt>Release</tt>, project <tt>QuantLibXL</tt>, and do
<tt>Build/Build QuantLibXL</tt>.  

<img src="images/build_qlxl.jpg">

The build process creates the QuantLibAddin XLL file
<tt>QuantLibXL\\xll\\QuantLibXL-vc80-mt-s-0_9_0.xll</tt>.

\section sec_build_quantlibtestsuite Run the QuantLib Testsuite

It's a good idea to verify the status of the QuantLib library by compiling the
testsuite. This will run the testsuite executable automatically (should take
less than half an hour in Release configuration, a few hours in Debug) and
report something like: 

\verbatim
1>Auto run test
1>=====================================
1>Testing QuantLib-vc80-mt-s-0_9_0.lib 
1>=====================================
1>Running moreThan200 test cases...
1>Platform: Win32
1>Compiler: Microsoft Visual C++ version 8.0
1>STL     : Dinkumware standard library version 405
1>Boost   : 1.33.1
1>Testing Barone-Adesi and Whaley approximation for American 
  options...
[...]
1>Testing old-style Monte Carlo multi-factor pricers...
1> 
1>Tests completed in XX m
1>Test suite "QuantLib test suite" passed with:
1>  moreThan200 assertions out of moreThan200 passed
1>  moreThan200 test cases out of moreThan200 passed
1>Build log was saved at 
1>"file://c:\Projects\QuantLib\test-suite\build\vc80\Release\
  BuildLog.htm"
1>testsuite - 0 error(s), 0 warning(s)
\endverbatim

\section sec_build_usage Usage

To launch QuantLibXL:
- start Excel
- load the addin <tt>QuantLibXL\\xll\\QuantLibXL-vc80-mt-s-0_9_0.xll</tt>
- load a sample spreadsheet e.g. <tt>QuantLibXL\\Workbooks\\StandaloneExamples\\instruments.xls</tt>
- hit <tt>Ctrl-Alt-F9</tt> to force a recalculation of all formulas

If you want to have QuantLibXL loaded every time you start Excel,
you can accomplish this as follows:
\li start Excel
\li ensure that at least one workbook is loaded - creating a new empty workbook if necessary
\li do <tt>Tools/Add-Ins</tt>, and click the Browse button
\li browse your way to the QuantLibXL XLL and click OK

\section sec_build_support Support

If you need help, please send email to quantlib-users@lists.sf.net.  You can
also
<a href="http://sourceforge.net/search/?group_id=12740&type_of_search=mlists">search the archives</a>.

\section sec_build_links Links

For further information please consult the following links:
- <a href="http://quantlib.org/">QuantLib home page</a>
- <a href="http://quantlib.org/faq.shtml">general QuantLib FAQ</a>
- <a href="http://quantlib.org/developerFAQ.shtml">QuantLib developer FAQ</a>
- <a href="http://www.quantlibaddin.org/faq.html">QuantLibAddin FAQ</a>
- <a href="http://www.quantlibaddin.org/">QuantLibAddin home page</a>
- <a href="http://www.quantlibxl.org/">QuantLibXL home page</a>
- <a href="http://www.objecthandler.org">ObjectHandler home page</a>
- <a href="http://www.gensrc.org">gensrc home page</a>

*/

