
/*
 Copyright (C) 2005, 2006, 2007, 2008 Eric Ehlers

 This file is part of QuantLib, a free-software/open-source library
 for financial quantitative analysts and developers - http://quantlib.org/

 QuantLib is free software developed by the QuantLib Group; you can
 redistribute it and/or modify it under the terms of the QuantLib License;
 either version 1.0, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 QuantLib License for more details.

 You should have received a copy of the QuantLib License along with this
 program; if not, please email quantlib-dev@lists.sf.net

 The QuantLib License is also available at <http://quantlib.org/license.shtml>
 The members of the QuantLib Group are listed in the QuantLib License
*/

/*! \page build_cpp Build A QuantLibAddin C++ Environment on Windows and/or Linux

<div align="center"><small><a href="tutorials.html">back to tutorials index</a></small></div> 

\section build_cpp_overview Overview

This document provides general instructions for building a %QuantLibAddin C++
environment under Windows, and on platforms which use %Autoconf e.g. Linux.

<dl>
<dt>\ref build_cpp_prerequisites</dt>
<dd><dl>
<dt>\ref build_cpp_conventions</dt>
<dt>\ref build_cpp_boost</dt>
<dt>\ref build_cpp_python</dt>
</dl></dd>
<dt>\ref build_cpp_win</dt>
<dd><dl>
<dt>\ref build_cpp_win_download</dt>
<dt>\ref build_cpp_win_build</dt>
<dt>\ref build_cpp_win_test</dt>
<dt>\ref build_cpp_win_usage</dt>
</dl></dd>
<dt>\ref build_cpp_auto</dt>
<dd><dl>
<dt>\ref build_cpp_auto_download</dt>
<dt>\ref build_cpp_auto_build</dt>
<dt>\ref build_cpp_auto_test</dt>
<dt>\ref build_cpp_auto_usage</dt>
</dl></dd>
</dl>

\section build_cpp_prerequisites 1 Prerequisites

Before proceeding to compile the source code, please consult the
documents below.

\subsection build_cpp_conventions 1.1 Conventions

Please read the following document regarding naming conventions in
use for the project: \ref conventions

\subsection build_cpp_boost 1.2 Boost

%QuantLibAddin depends on Boost.  Here are the instructions for
installing Boost: \ref boost

\subsection build_cpp_python 1.3 Python

Some %QuantLibAddin code is autogenerated by gensrc, which is a Python script.
Before rebuilding %QuantLibAddin you need to have Python installed on your
machine.  Here is the link to the Python website:
<a href="http://www.python.org/">http://www.python.org/</a>.

\section build_cpp_win 2 Windows

\subsection build_cpp_win_download 2.2 Download

\subsubsection build_cpp_win_directories 2.2.1 Directories

The Visual C++ project files for %QuantLibAddin rely on relative pathnames to
refer to the prerequisite projects %QuantLib, log4cxx, gensrc, ObjectHandler,
and %QuantLibAddin.  In order for this to work, these projects must reside side
by side in the directory tree, and the name of each project's parent directory
must not include the version number (e.g.  "QuantLib" not "QuantLib-0.9.5").  

By default the installer for each project uncompresses the source code to
<tt>C:\\build_ql_0_9_5</tt> (with the exception of the zip file for %QuantLib,
where you must manually specify the target directory, removing the "0.9.5"
suffix from the directory name).  For purposes of this tutorial we assume the
packages have been installed in this way e.g.:
\verbatim
C:\build_ql_0_9_5\gensrc
C:\build_ql_0_9_5\log4cxx
C:\build_ql_0_9_5\ObjectHandler
C:\build_ql_0_9_5\QuantLib
C:\build_ql_0_9_5\QuantLibAddin
\endverbatim

\subsubsection build_cpp_auto_uncompress 2.2.2 Uncompress the Source Code

Go to the 
<a href="http://sourceforge.net/project/showfiles.php?group_id=12740">QuantLib downloads page</a>.

Download <tt>log4cxx-0.10.0a.exe</tt> and uncompress the package to
<tt>C:\\build_ql_0_9_5\\log4cxx</tt>.

Download <tt>gensrc-0.9.5.exe</tt> and uncompress the package to
<tt>C:\\build_ql_0_9_5\\gensrc</tt>.

Download <tt>ObjectHandler-0.9.5.exe</tt> and uncompress the package to
<tt>C:\\build_ql_0_9_5\\%ObjectHandler</tt>.

Download <tt>QuantLib-0.9.5.zip</tt> and uncompress the package to
<tt>C:\\build_ql_0_9_5\\%QuantLib</tt>.

Download <tt>QuantLibAddin-0.9.5.exe</tt> and uncompress the package to
<tt>C:\\build_ql_0_9_5\\%QuantLibAddin</tt>.

\subsection build_cpp_win_build 2.3 Build

Open solution <tt>%QuantLibAddin\\QuantLibAddin_vc?.sln</tt>, choose
configuration <tt>Release</tt>, and execute menu item <tt>Build / Build
Solution</tt>.

\subsection build_cpp_win_test 2.4 Test

Open a DOS prompt in directory 
\verbatim
C:\build_ql_0_9_5\QuantLibAddin\Clients\Cpp\bin
\endverbatim

Execute the example program.  The output should appear similar
to the following:
\verbatim
xxx
\endverbatim

\subsection build_cpp_win_usage 2.5 Usage

\subsubsection build_cpp_win_include 2.5.1 #include

Add the following directive to your project's source file:
\verbatim
#include <qlo/qladdin.hpp>
\endverbatim

\subsubsection build_cpp_win_link 2.5.2 Link

Your project's link to the %QuantLibAddin library is established automatically
by the directive
\verbatim
#pragma comment(lib, QLADDIN_LIB_NAME)
\endverbatim
in file <tt>qlo/autolink.hpp</tt>

The name of the library depends on your compiler and configuration.
For example, if you're using VC8, configuration Release, the library
is called
\verbatim
QuantLibAddin\lib\QuantLibObjects-vc80-mt-s-0_9_5.lib
\endverbatim

\section build_cpp_auto 3 Autoconf

\subsection build_cpp_auto_download 3.2 Download

\subsubsection build_cpp_auto_directories 3.2.1 Directories

This example assumes that you do not have root access to your machine, so that
the entire build and installation environment resides under your home
directory.

Let's say your home directory is <tt>/home/erik</tt>.  Create two
subdirectories under that, one where you will compile the code and the other
where you will install it:
\verbatim
/home/erik/build
/home/erik/install
\endverbatim

\subsubsection build_cpp_auto_uncompress 3.2.2 Uncompress the Source Code

Go to the 
<a href="http://sourceforge.net/project/showfiles.php?group_id=12740">QuantLib downloads page</a>.

Download <tt>log4cxx-0.10.0a.tgz</tt> and uncompress the package to
<tt>/home/erik/build/log4cxx-0.10.0a</tt>.

Download <tt>gensrc-0.9.5.tgz</tt> and uncompress the package to
<tt>/home/erik/build/gensrc-0.9.5</tt>.

Download <tt>ObjectHandler-0.9.5.tgz</tt> and uncompress the package to
<tt>/home/erik/build/%ObjectHandler-0.9.5</tt>.

Download <tt>QuantLib-0.9.5.tgz</tt> and uncompress the package to
<tt>/home/erik/build/QuantLib-0.9.5</tt>.

Download <tt>QuantLibAddin-0.9.5.tgz</tt> and uncompress the package to
<tt>/home/erik/build/QuantLibAddin-0.9.5</tt>.

\subsection build_cpp_auto_build 3.3 Build

\subsubsection build_cpp_auto_log4cxx 3.3.1 Build log4cxx

\verbatim
cd /home/erik/build/log4cxx-0.10.0a
./autogen.sh
cd /home/erik/build/log4cxx-0.10.0a/scr/apr
./configure --prefix=/home/erik/install
make install
cd /home/erik/build/log4cxx-0.10.0a/src/apr-util
./configure --prefix=/home/erik/install \
    --with-apr=/home/erik/install/bin/apr-1-config
make install
cd /home/erik/build/log4cxx-0.10.0a
./configure --prefix=/home/erik/install \
    --with-apr=/home/erik/install/bin/apr-1-config \
    --with-apr-util=/home/erik/install/bin/apu-1-config
make install
\endverbatim

\subsubsection build_cpp_auto_oh 3.3.2 Build ObjectHandler

\verbatim
cd /home/erik/build/ObjectHandler-0.9.5
./configure --with-gensrc=/home/erik/build/gensrc-0.9.5 \
    --prefix=/home/erik/install \
    CPPFLAGS=-I/home/erik/install/include LDFLAGS=-L/home/erik/install/lib
make install
\endverbatim

\subsubsection build_cpp_auto_ql 3.3.3 Build QuantLib

\verbatim
cd /home/erik/build/QuantLib-0.9.5
./configure --prefix=/home/erik/install
make install
\endverbatim

\subsubsection build_cpp_auto_qla 3.3.4 Build QuantLibAddin

\verbatim
cd /home/erik/build/QuantLibAddin-0.9.5
./configure --with-gensrc=/home/erik/build/gensrc-0.9.5 \
    --prefix=/home/erik/install --enable-addin-cpp \
    CPPFLAGS=-I/home/erik/install/include LDFLAGS=-L/home/erik/install/lib
make install
\endverbatim

\subsection build_cpp_auto_test 3.4 Test

\verbatim
cd /home/erik/build/QuantLibAddin-0.9.5/Clients/Cpp
./QLADemo
\endverbatim

This should generate output similar to the following:

\verbatim
xxx
\endverbatim

\subsection build_cpp_auto_usage 3.5 Usage

To incorporate %QuantLibAddin functionality into your own applications:

The header you need is
\verbatim
#include <qlo/qladdin.hpp>
\endverbatim

To compile your program, ensure that the path containing the %QuantLibAddin
header is among those searched by your compiler.  If you have followed the
build instructions above, the command would be

\verbatim
g++ -I/home/erik/install/include -c -o yourapp.o yourapp.cpp
\endverbatim

When linking your program use the -l option to tell gcc to link to the log4cxx,
ObjectHandler, %QuantLib, and %QuantLibAddin libraries, and use -L to specify
the path containing those libraries, e.g:

\verbatim
g++ -o yourapp yourapp.o -L/home/erik/install/lib \
    -llog4cxx -lObjectHandler -lQuantLib -lQuantLibAddin
\endverbatim

Finally before invoking your executable you need to ensure that your
loader knows where to find the libraries, e.g:

\verbatim
export LD_LIBRARY_PATH=/home/erik/install/lib
\endverbatim

<div align="center"><small><a href="tutorials.html">back to tutorials index</a></small></div> 

*/


