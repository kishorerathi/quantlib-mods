    const char* %s::mPropertyNames[] = {%s};

    std::vector<std::string> %s::getPropertyNames() const {
#ifdef QLA_PATCH_MSVC6
        std::vector<std::string> ret;
        const int max = sizeof(mPropertyNames)/sizeof(const char*);
        for (int i=0; i<max; i++) ret.push_back(mPropertyNames[i]);
        return ret;
#else
        return std::vector<std::string>(
            mPropertyNames, mPropertyNames + sizeof(mPropertyNames)/sizeof(const char*));
#endif
    }

    boost::any %s::getProperty(const std::string& name) const {
        %s
            throw ObjHandler::Exception("Error: attempt to retrieve non-existent Property: '" + name + "'");

        return boost::any(); /* Dummy return - just to avoid stupid compiler warnings/errors */
    }

    %s::%s(%s) :%s {}

