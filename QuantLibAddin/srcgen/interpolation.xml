<Category name='interpolation'>
<description>functions to carry out interpolations</description>
<displayName>Interpolation</displayName>
<Functions>

<Constructor name='qlBackwardFlatInterpolation'>
<libraryFunction>BackwardFlatInterpolation</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='allowExtrapolation'>
        <type>bool</type>
        <tensorRank>scalar</tensorRank>
        <description>allow extrapolation flag</description>
    </Parameter>
</Parameters>
</Constructor>

<Constructor name='qlForwardFlatInterpolation'>
<libraryFunction>ForwardFlatInterpolation</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='allowExtrapolation'>
        <type>bool</type>
        <tensorRank>scalar</tensorRank>
        <description>allow extrapolation flag</description>
    </Parameter>
</Parameters>
</Constructor>

<Constructor name='qlLinearInterpolation'>
<libraryFunction>LinearInterpolation</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='allowExtrapolation'>
        <type>bool</type>
        <tensorRank>scalar</tensorRank>
        <description>allow extrapolation flag</description>
    </Parameter>
</Parameters>
</Constructor>

<Constructor name='qlCubicSplineInterpolation'>
<libraryFunction>CubicSplineInterpolation</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='allowExtrapolation'>
        <type>bool</type>
        <tensorRank>scalar</tensorRank>
        <description>allow extrapolation flag</description>
    </Parameter>
    <Parameter name='leftConditionType'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>left boundary condition (NotAKnot, FirstDerivative, SecondDerivative, Periodic, Lagrange)</description>
    </Parameter>
    <Parameter name='leftConditionValue'>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
        <description>left condition value</description>
    </Parameter>
    <Parameter name='rightConditionType'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>right boundary condition (NotAKnot, FirstDerivative, SecondDerivative, Periodic, Lagrange)</description>
    </Parameter>
    <Parameter name='rightConditionValue'>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
        <description>right condition value</description>
    </Parameter>
    <Parameter name='monotonicityConstraint'>
        <type>bool</type>
        <tensorRank>scalar</tensorRank>
        <description>monotonicity constraint flag</description>
    </Parameter>
</Parameters>
</Constructor>

<Member name='qlInterpolate' libraryClass='Interpolation'>
<description>carry out interpolation</description>
<libraryFunction>interpolate</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='xArray'>
        <type>double</type>
        <tensorRank>matrix</tensorRank>
        <description>x array</description>
    </Parameter>
    <Parameter name='yArray'>
        <type>double</type>
        <tensorRank>matrix</tensorRank>
        <description>y array</description>
    </Parameter>
    <Parameter name='xValues'>
        <type>double</type>
        <tensorRank>matrix</tensorRank>
        <description>x values</description>
    </Parameter>
</Parameters>
<ReturnValue>
    <type>double</type>
    <tensorRank>matrix</tensorRank>
    <description>interpolated y values</description>
</ReturnValue>
</Member>

</Functions>
</Category>

