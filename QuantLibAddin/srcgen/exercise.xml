<Category name='exercise'>
<description>functions to construct QuantLib Exercise objects</description>
<displayName>Exercise</displayName>
<Functions>

<Constructor name='qlAmericanExercise'>
<libraryFunction>AmericanExercise</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='earliestDate'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>earliest exercise date</description>
    </Parameter>
    <Parameter name='latestDate'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>latest exercise date</description>
    </Parameter>
    <Parameter name='payoffAtExpiry' default='false'>
        <type>bool</type>
        <tensorRank>scalar</tensorRank>
        <description>payoff at expiry</description>
    </Parameter>
</Parameters>
</Constructor>

<Constructor name='qlEuropeanExercise'>
<libraryFunction>EuropeanExercise</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='expiryDate'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>expiry date</description>
    </Parameter>
</Parameters>
</Constructor>

<Constructor name='qlBermudanExercise'>
<libraryFunction>BermudanExercise</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='dates' ql_type='QuantLib::Date'>
        <type>long</type>
        <tensorRank>vector</tensorRank>
        <description>dates</description>
    </Parameter>
    <Parameter name='payoffAtExpiry' default='false'>
        <type>bool</type>
        <tensorRank>scalar</tensorRank>
        <description>payoff at expiry</description>
    </Parameter>
</Parameters>
</Constructor>

</Functions>
</Category>

