<Category name='termstructures'>
<headerOnly>false</headerOnly>
<description>functions to construct QuantLib term structure objects</description>
<displayName>Term Structures</displayName>
<Functions>

<Constructor name='qlDepositRateHelper'>
<description>construct and return a handle to a deposit rate-helper object</description>
<libraryFunction>DepositRateHelper</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='quote'>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
        <description>quote</description>
    </Parameter>
    <Parameter name='maturity'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>maturity</description>
    </Parameter>
    <Parameter name='timeUnits'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>time units applying to above maturity</description>
    </Parameter>
    <Parameter name='fixingDays'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>fixing days (e.g. 2)</description>
    </Parameter>
    <Parameter name='calendar'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>calendar (e.g. TARGET)</description>
    </Parameter>
    <Parameter name='convention'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>business day convention (e.g. ModifiedFollowing)</description>
    </Parameter>
    <Parameter name='dayCounter'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>day counter (e.g. Actual360)</description>
    </Parameter>
</Parameters>
</Constructor>

<Constructor name='qlFutureRateHelper'>
<description>construct and return a handle to a future rate-helper object</description>
<libraryFunction>FutureRateHelper</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='price'>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
        <description>future price</description>
    </Parameter>
    <Parameter name='IMM'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>IMM expiry shortcut</description>
    </Parameter>
    <Parameter name='months'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>future contract lenght in months</description>
    </Parameter>
    <Parameter name='DayCounter'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>day counter (e.g. Thirty360)</description>
    </Parameter>
    <Parameter name='bDayConvention'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>business day convention (e.g. ModifiedFollowing)</description>
    </Parameter>
	<Parameter name='calendar'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>calendar (e.g. TARGET)</description>
    </Parameter>
    <Parameter name='decade'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>base decade for the IMM shortcut (e.g. 2000 for H4 -> March 2004)</description>
    </Parameter>
</Parameters>
</Constructor>

<Member name='qlGetDf' getObject='true'>
<description>retrieve a discount factor at specified date</description>
<libraryFunction>discount</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='handle' libraryClass='YieldTermStructure'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>handle of the Yield Term Structure object</description>
    </Parameter>
    <Parameter name='DfDate' ql_type='QuantLib::Date'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>date</description>
    </Parameter>
    <Parameter name='iPol'>
        <type>bool</type>
        <tensorRank>scalar</tensorRank>
        <description>Interpolate Flag</description>
    </Parameter>
    <Parameter name='trigger' ignore='true'>
        <type>any</type>
        <tensorRank>scalar</tensorRank>
        <description>dep tracking trigger</description>
    </Parameter>
</Parameters>
<ReturnValue>
    <type>double</type>
    <tensorRank>scalar</tensorRank>
    <description>the discount factor</description>
</ReturnValue>
</Member>

<Constructor name='qlPiecewiseFlatForward'>
<description>construct and return a handle to a piecewise flat forward term structure</description>
<libraryFunction>PiecewiseFlatForward</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='evaluationDate'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>evaluation date</description>
    </Parameter>
    <Parameter name='settlementDate'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>settlement date (e.g. evaluationDate + 2)</description>
    </Parameter>
    <Parameter name='rateHelpers'>
        <type>string</type>
        <tensorRank>vector</tensorRank>
        <description>vector of rate-helper handles</description>
    </Parameter>
    <Parameter name='dayCounter'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>day counter (e.g. Actual360)</description>
    </Parameter>
</Parameters>
</Constructor>

<Member name='qlSetQuote'>
<description>update quote of existing Rate Helper object</description>
<libraryFunction>setQuote</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='handle' libraryClass='RateHelper'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>handle of the Rate Helper object</description>
    </Parameter>
    <Parameter name='Quote'>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
        <description>the new qoute</description>
    </Parameter>
</Parameters>
<ReturnValue>
    <type>double</type>
    <tensorRank>scalar</tensorRank>
    <description>diff new quote - old quote</description>
</ReturnValue>
</Member>

<Constructor name='qlSwapRateHelper'>
<description>construct and return a handle to a swap rate-helper object</description>
<libraryFunction>SwapRateHelper</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='quote'>
        <type>double</type>
        <tensorRank>scalar</tensorRank>
        <description>quote</description>
    </Parameter>
    <Parameter name='maturity'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>maturity</description>
    </Parameter>
    <Parameter name='timeUnits'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>time units applying to above maturity</description>
    </Parameter>
    <Parameter name='fixingDays'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>fixing days (e.g. 2)</description>
    </Parameter>
	<Parameter name='calendar'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>calendar (e.g. TARGET)</description>
    </Parameter>
    <Parameter name='fixedLegFrequency'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>fixed leg frequency (e.g. Annual)</description>
    </Parameter>
    <Parameter name='fixedLegConvention'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>fixed leg convention (e.g. Unadjusted)</description>
    </Parameter>
    <Parameter name='fixedLegDayCounter'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>fixed leg day counter (e.g. Thirty360)</description>
    </Parameter>
    <Parameter name='floatingLegFrequency'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>floating leg frequency (e.g. Quarterly, Semiannual, etc.)</description>
    </Parameter>
    <Parameter name='floatingLegConvention'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>floating leg convention (e.g. ModifiedFollowing)</description>
    </Parameter>
</Parameters>
</Constructor>

<Constructor name='qlZeroCurve'>
<description>construct and return a handle to a ZeroCurve object</description>
<libraryFunction>ZeroCurve</libraryFunction>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='curveDates'>
        <type>long</type>
        <tensorRank>vector</tensorRank>
        <description>dates of the zero curve</description>
    </Parameter>
    <Parameter name='curveYields'>
        <type>double</type>
        <tensorRank>vector</tensorRank>
        <description>yields of the zero curve</description>
    </Parameter>
    <Parameter name='dayCounterID'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>day counter ID</description>
    </Parameter>
</Parameters>
</Constructor>

</Functions>
</Category>

