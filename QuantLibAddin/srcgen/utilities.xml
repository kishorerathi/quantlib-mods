<Category name='utilities'>
<description>diagnostic and utility functions</description>
<displayName>Utilities</displayName>

<Functions>

<Procedure name='qlVersion'>
<description>returns the version number of QuantLib</description>
<functionCategory>QuantLib</functionCategory>
<Parameters/>
<ReturnValue>
    <type>string</type>
    <tensorRank>scalar</tensorRank>
    <description>QuantLib version number</description>
</ReturnValue>
</Procedure>

<Procedure name='qlListRegisteredEnums'>
<description>return the names of all registered enums</description>
<functionCategory>QuantLib</functionCategory>
<alias>QuantLibAddin::EnumRegistry::instance().getAllRegisteredTypes</alias>
<Parameters/>
<ReturnValue>
    <type>string</type>
    <tensorRank>vector</tensorRank>
    <description>list of names of registered enums</description>
</ReturnValue>
</Procedure>

<Procedure name='qlListEnum'>
<description>return the members of a given enumeration</description>
<functionCategory>QuantLib</functionCategory>
<alias>QuantLibAddin::EnumRegistry::instance().getTypeElements</alias>
<Parameters>
    <Parameter name='enumId'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>name of the enum to list</description>
    </Parameter>
</Parameters>
<ReturnValue>
    <type>string</type>
    <tensorRank>vector</tensorRank>
    <description>list of the members of the specified enumeration</description>
</ReturnValue>
</Procedure>

<Procedure name='qlListRegisteredTypes'>
<description>return the names of all registered complex types</description>
<functionCategory>QuantLib</functionCategory>
<alias>QuantLibAddin::ComplexTypeRegistry::instance().getAllRegisteredTypes</alias>
<Parameters/>
<ReturnValue>
    <type>string</type>
    <tensorRank>vector</tensorRank>
    <description>list of names of registered enums</description>
</ReturnValue>
</Procedure>

<Procedure name='qlListType'>
<description>return the members of a given complex type</description>
<functionCategory>QuantLib</functionCategory>
<alias>QuantLibAddin::ComplexTypeRegistry::instance().getTypeElements</alias>
<Parameters>
    <Parameter name='typeId'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>name of the complex type to list</description>
    </Parameter>
</Parameters>
<ReturnValue>
    <type>string</type>
    <tensorRank>vector</tensorRank>
    <description>list of the members of the specified enumeration</description>
</ReturnValue>
</Procedure>

</Functions>
</Category>

