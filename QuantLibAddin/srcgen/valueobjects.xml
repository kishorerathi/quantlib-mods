<?xml version='1.0'?>
<Addin name='ValueObjects'>
<platformId>C</platformId>
<rootDirectory>../Addins/ValueObjects/</rootDirectory>

<Buffers>
<Buffer name='bufferClassBody' fileName='stub.vo.class.body'/>
<Buffer name='bufferClassDecl' fileName='stub.vo.class.decl'/>
<Buffer name='bufferIncludesDecl' fileName='stub.vo.includes.decl'/>
<Buffer name='bufferIncludes' fileName='stub.vo.includes.body'/>
</Buffers>

<RuleGroups>

<RuleGroup name='constructorDeclaration' indent='3'>
    <Rules>
    <Rule name='setType'>
        <SubRules>
        <SubRule>
            <tensorRanks>
                <tensorRank>scalar</tensorRank>
            </tensorRanks>
            <replacements>
                <string>const std::string&amp;</string>
                <any>const boost::any&amp;</any>
            </replacements>
        </SubRule>
        <SubRule>
            <tensorRanks><tensorRank>vector</tensorRank></tensorRanks>
            <replacements>
				<long>const std::vector&lt;long&gt;&amp;</long>
				<double>const std::vector&lt;double&gt;&amp;</double>
				<bool>const std::vector&lt;bool&gt;&amp;</bool>
				<string>const std::vector&lt;std::string&gt;&amp;</string>
				<any>const std::vector&lt;boost::any&gt;&amp;</any>
            </replacements>
        </SubRule>
		<SubRule>
			<tensorRanks>
				<tensorRank>matrix</tensorRank>
			</tensorRanks>
			<replacements>
				<long>const std::vector&lt;std::vector&lt;long&gt; &gt;&amp;</long>
				<double>const std::vector&lt;std::vector &lt;double&gt; &gt;&amp;</double>
				<bool>const std::vector&lt;std::vector &lt;bool&gt; &gt;&amp;</bool>
				<string>const std::vector&lt;std::vector&lt;std::string&gt; &gt;&amp;</string>
				<any>const std::vector&lt;std::vector &lt;boost::any&gt; &gt;&amp;</any>
			</replacements>
		</SubRule>
        </SubRules>
    </Rule>
    <Rule name='dereferenceName'>
        <SubRules>
        </SubRules>
    </Rule>
    </Rules>
</RuleGroup>

<RuleGroup name='memberDeclaration' indent='2'>
    <Rules>
    <Rule name='setType'>
        <SubRules>
        <SubRule>
            <tensorRanks><tensorRank>scalar</tensorRank></tensorRanks>
            <replacements>
                <string>std::string</string>
                <any>boost::any</any>
            </replacements>
        </SubRule>
        <SubRule>
            <tensorRanks><tensorRank>vector</tensorRank></tensorRanks>
            <replacements>
				<long>std::vector&lt;long&gt;</long>
				<double>std::vector&lt;double&gt;</double>
				<bool>std::vector&lt;bool&gt;</bool>
				<string>std::vector&lt;std::string&gt;</string>
				<any>std::vector&lt;boost::any&gt;</any>
            </replacements>
        </SubRule>
		<SubRule>
			<tensorRanks>
				<tensorRank>matrix</tensorRank>
			</tensorRanks>
			<replacements>
				<long>std::vector&lt;std::vector&lt;long&gt; &gt;</long>
				<double>std::vector&lt;std::vector &lt;double&gt; &gt;</double>
				<bool>std::vector&lt;std::vector &lt;bool&gt; &gt;</bool>
				<string>std::vector&lt;std::vector&lt;std::string&gt; &gt;</string>
				<any>std::vector&lt;std::vector &lt;boost::any&gt; &gt;</any>
			</replacements>
		</SubRule>
        </SubRules>
    </Rule>
    <Rule name='dereferenceName'>
        <SubRules>
        </SubRules>
    </Rule>
	<Rule name='reformatName'>
		<SubRules>
        <SubRule>
            <tensorRanks>
                <tensorRank>scalar</tensorRank>
				<tensorRank>vector</tensorRank>
				<tensorRank>matrix</tensorRank>
            </tensorRanks>
			<replacements>
				<default>%s_</default>
			</replacements>
		</SubRule>
		</SubRules>
	</Rule>
    </Rules>
</RuleGroup>

<RuleGroup name='propertyDeclaration' indent='2'>
    <Rules>
    <Rule name='setType'>
        <SubRules>
        <SubRule>
            <tensorRanks>
				<tensorRank>scalar</tensorRank>
				<tensorRank>vector</tensorRank>
				<tensorRank>matrix</tensorRank>
			</tensorRanks>
            <replacements>
                <default>null</default>
            </replacements>
        </SubRule>
        </SubRules>
    </Rule>
	<Rule name='reformatName'>
		<SubRules>
        <SubRule>
            <tensorRanks>
                <tensorRank>scalar</tensorRank>
				<tensorRank>vector</tensorRank>
				<tensorRank>matrix</tensorRank>
            </tensorRanks>
			<replacements>
				<default>"%s"</default>
			</replacements>
		</SubRule>
		</SubRules>
	</Rule>
    </Rules>
</RuleGroup>

<RuleGroup name='libraryReturnType'>
    <Rules>
    <Rule name='setType'>
        <SubRules>
        <SubRule>
            <tensorRanks>
                <tensorRank>scalar</tensorRank>
                <tensorRank>vector</tensorRank>
                <tensorRank>matrix</tensorRank>
            </tensorRanks>
            <replacements>
                <string>std::string</string>
                <any>boost::any</any>
            </replacements>
        </SubRule>
        </SubRules>
    </Rule>
    <Rule name='reformatType'>
        <SubRules>
        <SubRule>
            <tensorRanks>
                <tensorRank>vector</tensorRank>
            </tensorRanks>
            <replacements>
                <default>std::vector &lt; %s &gt;</default>
            </replacements>
        </SubRule>
        <SubRule>
            <tensorRanks>
                <tensorRank>matrix</tensorRank>
            </tensorRanks>
            <replacements>
                <default>std::vector &lt; std::vector &lt; %s &gt; &gt;</default>
            </replacements>
        </SubRule>
        </SubRules>
    </Rule>
    </Rules>
</RuleGroup>

<RuleGroup name='libraryCall' ql_type='true' appendConversionSuffix='true' indent='3'>
    <Rules>
    <Rule name='setType'>
        <SubRules>
        <SubRule>
            <tensorRanks>
                <tensorRank>scalar</tensorRank>
                <tensorRank>vector</tensorRank>
                <tensorRank>matrix</tensorRank>
            </tensorRanks>
            <replacements>
                <default>null</default>
            </replacements>
        </SubRule>
        </SubRules>
    </Rule>
    <Rule name='reformatName'>
        <SubRules>
        <SubRule>
            <tensorRanks>
                <tensorRank>scalar</tensorRank>
            </tensorRanks>
            <replacements>
                <optional>%s</optional>
                <bool>%s == TRUE</bool>
                <string>std::string(%s)</string>
            </replacements>
        </SubRule>
        </SubRules>
    </Rule>
    </Rules>
</RuleGroup>

<RuleGroup name='conversions' appendConversionSuffix='true' indent='2'>
    <Rules>
    <Rule name='setType'>
        <SubRules>
        <SubRule>
            <tensorRanks>
                <tensorRank>scalar</tensorRank>
            </tensorRanks>
            <replacements>
                <string>std::string</string>
                <any>boost::any</any>
            </replacements>
        </SubRule>
        <SubRule>
            <tensorRanks>
                <tensorRank>vector</tensorRank>
                <tensorRank>matrix</tensorRank>
            </tensorRanks>
            <replacements>
                <string>std::string</string>
                <any>boost::any</any>
            </replacements>
        </SubRule>
        </SubRules>
    </Rule>
    <Rule name='reformatType'>
        <SubRules>
        <SubRule>
            <tensorRanks>
                <tensorRank>vector</tensorRank>
            </tensorRanks>
            <replacements>
                <default>std::vector &lt; %s &gt;</default>
            </replacements>
        </SubRule>
        <SubRule>
            <tensorRanks>
                <tensorRank>matrix</tensorRank>
            </tensorRanks>
            <replacements>
                <default>std::vector &lt; std::vector &lt; %s &gt; &gt;</default>
            </replacements>
        </SubRule>
        </SubRules>
    </Rule>
    <Rule name='setTypeConversion'>
        <SubRules>
        <SubRule>
            <tensorRanks>
                <tensorRank>scalar</tensorRank>
                <tensorRank>vector</tensorRank>
                <tensorRank>matrix</tensorRank>
            </tensorRanks>
            <replacements>
                <default>varies</default>
            </replacements>
        </SubRule>
        </SubRules>
    </Rule>
    </Rules>
</RuleGroup>

</RuleGroups>

</Addin>

