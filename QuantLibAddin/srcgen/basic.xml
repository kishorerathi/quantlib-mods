<Category name='basic'>
<description>Basic QuantLib functions</description>
<displayName>Basic</displayName>
<Functions>

<Procedure name='qlMidEquivalent' >
  <description>returns the mid price if available, or a suitable substitute otherwise</description>
  <functionCategory>QuantLib</functionCategory>
  <Parameters>
    <Parameter name='bid' default='0'>
      <type>double</type>
      <tensorRank>scalar</tensorRank>
      <description>bid price</description>
    </Parameter>
    <Parameter name='ask' default='0'>
      <type>double</type>
      <tensorRank>scalar</tensorRank>
      <description>ask price</description>
    </Parameter>
    <Parameter name='last' default='0'>
      <type>double</type>
      <tensorRank>scalar</tensorRank>
      <description>last price</description>
    </Parameter>
    <Parameter name='close' default='0'>
      <type>double</type>
      <tensorRank>scalar</tensorRank>
      <description>close price</description>
    </Parameter>
  </Parameters>
  <ReturnValue>
    <type>double</type>
    <tensorRank>scalar</tensorRank>
    <description>mid (equivalent) price</description>
  </ReturnValue>
</Procedure>

 
<Procedure name='qlAdvanceCalendar' >
<description>advances the given calendar</description>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='startDate'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>start date to be advanced</description>
    </Parameter>
    <Parameter name='n'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>number of units to advance</description>
    </Parameter>
    <Parameter name='timeUnits'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>units to advance</description>
    </Parameter>
    <Parameter name='calendar'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>Calendar ID to advance</description>
    </Parameter>
    <Parameter name='rollingConvention'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>rolling convention</description>
    </Parameter>
</Parameters>
<ReturnValue return_func='serialNumber'>
    <type>long</type>
    <tensorRank>scalar</tensorRank>
    <description>advanced date</description>
</ReturnValue>
</Procedure>

<Procedure name='qlYearFraction'>
<description>calculate a year fraction</description>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='dayCounter'>
        <type>string</type>
        <tensorRank>scalar</tensorRank>
        <description>day-counter convention</description>
    </Parameter>
    <Parameter name='startDate'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>start date</description>
    </Parameter>
    <Parameter name='endDate'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>end date</description>
    </Parameter>
    <Parameter name='refPeriodStart'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>start date for reference period</description>
    </Parameter>
    <Parameter name='refPeriodEnd'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>end date for reference period</description>
    </Parameter>    
</Parameters>
<ReturnValue>
    <type>double</type>
    <tensorRank>scalar</tensorRank>
    <description>advanced date</description>
</ReturnValue>
</Procedure>

<Procedure name='qlGetEvalDate'>
<description>returns the current value of the Evaluation Date</description>
<functionCategory>QuantLib</functionCategory>
<Parameters/>
<ReturnValue return_func='serialNumber'>
    <type>long</type>
    <tensorRank>scalar</tensorRank>
    <description>evaluation date</description>
</ReturnValue>
</Procedure>

<Procedure name='qlSetEvalDate'>
<description>sets the value of the Evaluation Date</description>
<functionCategory>QuantLib</functionCategory>
<Parameters>
    <Parameter name='evalDate'>
        <type>long</type>
        <tensorRank>scalar</tensorRank>
        <description>new value for the evaluation date</description>
    </Parameter>
</Parameters>
<ReturnValue>
    <type>long</type>
    <tensorRank>scalar</tensorRank>
    <description>evaluation date</description>
</ReturnValue>
</Procedure>

</Functions>
</Category>

